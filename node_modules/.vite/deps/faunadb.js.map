{
  "version": 3,
  "sources": ["../../.pnpm/fn-annotate@1.2.0/node_modules/fn-annotate/index.js", "../../.pnpm/util-deprecate@1.0.2/node_modules/util-deprecate/browser.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/package.json", "browser-external:chalk", "browser-external:boxen", "../../.pnpm/cross-fetch@3.1.5/node_modules/cross-fetch/dist/browser-ponyfill.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_util.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/Expr.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/errors.js", "../../.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js", "browser-external:util", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/values.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/query.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_json.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/PageHelper.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/RequestResult.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_http/errors.js", "browser-external:http2", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_http/http2Adapter.js", "../../.pnpm/node-abort-controller@3.1.1/node_modules/node-abort-controller/browser.js", "browser-external:https", "browser-external:http", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_http/fetchAdapter.js", "browser-external:os", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/_http/index.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/stream.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/Client.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/src/clientLogger.js", "../../.pnpm/faunadb@4.7.1/node_modules/faunadb/index.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = annotate;\n\nfunction annotate(fn) {\n\n  if (typeof fn !== 'function') {\n    throw new Error('Could not parse function signature for injection dependencies: Object is not a function');\n  }\n\n  if (!fn.length) return [];\n\n  var injects = /^()\\(?([^)=]*)\\)? *=>/.exec(fn + '') ||\n                /^[^(]+([^ \\(]*) *\\(([^\\)]*)\\)/.exec(fn + '');\n\n  if (!injects) {\n    throw new Error('Could not parse function signature for injection dependencies: ' + fn + '');\n  }\n\n  var argumentString = injects[2]\n\n  // Strip multi-line comments:\n  // Uses the lazy-quantifier (.*?): http://www.rexegg.com/regex-quantifiers.html#lazy_solution\n  .replace(/\\/\\*[\\S\\s]*?\\*\\//g, ' ')\n\n  // Strip single-line comments:\n  .replace(/\\/\\/.*/g, ' ');\n\n  function groupSubArguments(_, type, keys) {\n    return type + keys.split(',')\n    .map(function (arg) {\n      return arg && arg.trim();\n    })\n    .filter(Boolean)\n    .join('@');\n  }\n\n  argumentString = argumentString.replace(/(\\{)([^}]*)\\}/g, groupSubArguments);\n  argumentString = argumentString.replace(/(\\[)([^}]*)\\]/g, groupSubArguments);\n\n  return argumentString.split(',')\n  .map(function (arg) {\n    return arg && arg.trim();\n  })\n  .map(function (arg) {\n    if (arg[0] === '{') {\n      return arg.substring(1).split('@');\n    }\n    if (arg[0] === '[') {\n      return { items: arg.substring(1).split('@') };\n    }\n    return arg;\n  })\n  .filter(Boolean);\n\n}\n", "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n", "{\n  \"name\": \"faunadb\",\n  \"version\": \"4.7.1\",\n  \"apiVersion\": \"4\",\n  \"description\": \"FaunaDB Javascript driver for Node.JS and Browsers\",\n  \"homepage\": \"https://fauna.com\",\n  \"repository\": \"fauna/faunadb-js\",\n  \"license\": \"MPL-2.0\",\n  \"keywords\": [\n    \"database\",\n    \"fauna\",\n    \"official\",\n    \"driver\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/fauna/faunadb-js/issues\"\n  },\n  \"files\": [\n    \"index.d.ts\",\n    \"src/\",\n    \"dist/\",\n    \"tools/printReleaseNotes.js\"\n  ],\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"doc\": \"jsdoc -c ./jsdoc.json\",\n    \"browserify\": \"browserify index.js --standalone faunadb -o dist/faunadb.js\",\n    \"browserify-min\": \"browserify index.js --standalone faunadb | terser -c -m --keep-fnames --keep-classnames -o dist/faunadb-min.js\",\n    \"prettify\": \"prettier --write \\\"{src,test}/**/*.{js,ts}\\\"\",\n    \"test\": \"jest --env=node --verbose=true --forceExit ./test\",\n    \"posttest\": \"node ./test/afterComplete\",\n    \"semantic-release\": \"semantic-release\",\n    \"wp\": \"webpack\",\n    \"postinstall\": \"node ./tools/printReleaseNotes\",\n    \"postupdate\": \"node ./tools/printReleaseNotes\",\n    \"load-test\": \"node ./tools/loadTest\"\n  },\n  \"types\": \"index.d.ts\",\n  \"dependencies\": {\n    \"base64-js\": \"^1.2.0\",\n    \"boxen\": \"^5.0.1\",\n    \"btoa-lite\": \"^1.0.0\",\n    \"chalk\": \"^4.1.1\",\n    \"cross-fetch\": \"^3.1.5\",\n    \"dotenv\": \"^8.2.0\",\n    \"fn-annotate\": \"^1.1.3\",\n    \"node-abort-controller\": \"^3.0.1\",\n    \"object-assign\": \"^4.1.0\",\n    \"util-deprecate\": \"^1.0.2\"\n  },\n  \"devDependencies\": {\n    \"ansi-regex\": \">=5.0.1\",\n    \"browserify\": \"^16.2.2\",\n    \"eslint\": \"^5.3.0\",\n    \"eslint-config-prettier\": \"^6.5.0\",\n    \"eslint-plugin-prettier\": \"^3.1.1\",\n    \"husky\": \"^7.0.4\",\n    \"jest\": \"^27.4.7\",\n    \"jsdoc\": \"^3.6.10\",\n    \"json-schema\": \">=0.4.0\",\n    \"lint-staged\": \">=8\",\n    \"marked\": \">=4.0.10\",\n    \"prettier\": \"1.18.2\",\n    \"semantic-release\": \"^19.0.3\",\n    \"terser\": \"^4.3.9\",\n    \"webpack\": \"^5.23.0\",\n    \"webpack-cli\": \"^4.5.0\",\n    \"yargs\": \"^16.2.0\"\n  },\n  \"lint-staged\": {\n    \"*.{js,css,json,md}\": [\n      \"prettier --write\",\n      \"git add\"\n    ],\n    \"*.js\": [\n      \"eslint --fix\",\n      \"git add\"\n    ]\n  },\n  \"release\": {\n    \"branches\": [\n      \"main\"\n    ]\n  },\n  \"browser\": {\n    \"http2\": false,\n    \"http\": false,\n    \"https\": false,\n    \"os\": false,\n    \"util\": false,\n    \"boxen\": false,\n    \"chalk\": false\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"chalk\" has been externalized for browser compatibility. Cannot access \"chalk.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"boxen\" has been externalized for browser compatibility. Cannot access \"boxen.${key}\" in client code.`)\n    }\n  }\n}))", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "'use strict'\n\nvar packageJson = require('../package.json')\nvar chalk = require('chalk')\nvar boxen = require('boxen')\n\nvar crossGlobal =\n  typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n    ? global\n    : self\n\n/**\n * Inherit the prototype methods from one constructor into another.\n * Source: https://github.com/kaelzhang/node-util-inherits\n * @param {function} ctor Constructor function which needs to inherit the prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n * @private\n */\nfunction inherits(ctor, superCtor) {\n  if (ctor === undefined || ctor === null) {\n    throw new TypeError(\n      'The constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor === undefined || superCtor === null) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor.prototype === undefined) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must have a prototype'\n    )\n  }\n\n  ctor.super_ = superCtor\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  })\n}\n\n/**\n * Determines if the current environment is a NodeJS environment.\n * @private\n */\nfunction isNodeEnv() {\n  return (\n    typeof window === 'undefined' &&\n    typeof process !== 'undefined' &&\n    process.versions != null &&\n    process.versions.node != null\n  )\n}\n\n/**\n * Resolves environment variable if available.\n *\n * @param {string} envKey A name of env variable.\n * @return {void|string} Returns requested env variable or void.\n * @private\n */\nfunction getEnvVariable(envKey) {\n  var areEnvVarsAvailable = !!(\n    typeof process !== 'undefined' &&\n    process &&\n    process.env\n  )\n\n  if (areEnvVarsAvailable && process.env[envKey] != null) {\n    return process.env[envKey]\n  }\n}\n\n/**\n * JavaScript Client Detection\n * @private\n */\nfunction getBrowserDetails() {\n  var browser = navigator.appName\n  var browserVersion = '' + parseFloat(navigator.appVersion)\n  var nameOffset, verOffset, ix\n\n  // Opera\n  if ((verOffset = navigator.userAgent.indexOf('Opera')) != -1) {\n    browser = 'Opera'\n    browserVersion = navigator.userAgent.substring(verOffset + 6)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n  }\n  // MSIE\n  else if ((verOffset = navigator.userAgent.indexOf('MSIE')) != -1) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n  }\n\n  //IE 11 no longer identifies itself as MS IE, so trap it\n  //http://stackoverflow.com/questions/17907445/how-to-detect-ie11\n  else if (\n    browser == 'Netscape' &&\n    navigator.userAgent.indexOf('Trident/') != -1\n  ) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n    if ((verOffset = navigator.userAgent.indexOf('rv:')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 3)\n    }\n  }\n\n  // Chrome\n  else if ((verOffset = navigator.userAgent.indexOf('Chrome')) != -1) {\n    browser = 'Chrome'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n  }\n  // Safari\n  else if ((verOffset = navigator.userAgent.indexOf('Safari')) != -1) {\n    browser = 'Safari'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n\n    // Chrome on iPad identifies itself as Safari. Actual results do not match what Google claims\n    //  at: https://developers.google.com/chrome/mobile/docs/user-agent?hl=ja\n    //  No mention of chrome in the user agent string. However it does mention CriOS, which presumably\n    //  can be keyed on to detect it.\n    if (navigator.userAgent.indexOf('CriOS') != -1) {\n      //Chrome on iPad spoofing Safari...correct it.\n      browser = 'Chrome'\n      //Don't believe there is a way to grab the accurate version number, so leaving that for now.\n    }\n  }\n  // Firefox\n  else if ((verOffset = navigator.userAgent.indexOf('Firefox')) != -1) {\n    browser = 'Firefox'\n    browserVersion = navigator.userAgent.substring(verOffset + 8)\n  }\n  // Other browsers\n  else if (\n    (nameOffset = navigator.userAgent.lastIndexOf(' ') + 1) <\n    (verOffset = navigator.userAgent.lastIndexOf('/'))\n  ) {\n    browser = navigator.userAgent.substring(nameOffset, verOffset)\n    browserVersion = navigator.userAgent.substring(verOffset + 1)\n    if (browser.toLowerCase() == browser.toUpperCase()) {\n      browser = navigator.appName\n    }\n  }\n  // trim the browser version string\n  if ((ix = browserVersion.indexOf(';')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(' ')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(')')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n\n  return [browser, browserVersion].join('-')\n}\n\nfunction getBrowserOsDetails() {\n  var os = 'unknown'\n  var clientStrings = [\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\n    { s: 'Windows CE', r: /Windows CE/ },\n    { s: 'Windows 3.11', r: /Win16/ },\n    { s: 'Android', r: /Android/ },\n    { s: 'Open BSD', r: /OpenBSD/ },\n    { s: 'Sun OS', r: /SunOS/ },\n    { s: 'Chrome OS', r: /CrOS/ },\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\n    { s: 'Mac OS X', r: /Mac OS X/ },\n    { s: 'Mac OS', r: /(Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n    { s: 'QNX', r: /QNX/ },\n    { s: 'UNIX', r: /UNIX/ },\n    { s: 'BeOS', r: /BeOS/ },\n    { s: 'OS/2', r: /OS\\/2/ },\n    {\n      s: 'Search Bot',\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\n    },\n  ]\n  for (var id in clientStrings) {\n    var cs = clientStrings[id]\n    if (cs.r.test(navigator.userAgent)) {\n      os = cs.s\n      break\n    }\n  }\n\n  var osVersion = 'unknown'\n\n  if (/Windows/.test(os)) {\n    osVersion = /Windows (.*)/.exec(os)[1]\n    os = 'Windows'\n  }\n\n  switch (os) {\n    case 'Mac OS':\n    case 'Mac OS X':\n    case 'Android':\n      osVersion = /(?:Android|Mac OS|Mac OS X|MacPPC|MacIntel|Mac_PowerPC|Macintosh) ([\\.\\_\\d]+)/.exec(\n        navigator.userAgent\n      )[1]\n      break\n\n    case 'iOS':\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(navigator.appVersion)\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0)\n      break\n  }\n  return [os, osVersion].join('-')\n}\n\n/**\n * For checking process.env always use `hasOwnProperty`\n * Some providers could throw an error when trying to access env variables that does not exists\n * @private */\nfunction getNodeRuntimeEnv() {\n  var runtimeEnvs = [\n    {\n      name: 'Netlify',\n      check: function() {\n        return process.env.hasOwnProperty('NETLIFY_IMAGES_CDN_DOMAIN')\n      },\n    },\n    {\n      name: 'Vercel',\n      check: function() {\n        return process.env.hasOwnProperty('VERCEL')\n      },\n    },\n    {\n      name: 'Heroku',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('PATH') &&\n          process.env.PATH.indexOf('.heroku') !== -1\n        )\n      },\n    },\n    {\n      name: 'AWS Lambda',\n      check: function() {\n        return process.env.hasOwnProperty('AWS_LAMBDA_FUNCTION_VERSION')\n      },\n    },\n    {\n      name: 'GCP Cloud Functions',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('_') &&\n          process.env._.indexOf('google') !== -1\n        )\n      },\n    },\n    {\n      name: 'GCP Compute Instances',\n      check: function() {\n        return process.env.hasOwnProperty('GOOGLE_CLOUD_PROJECT')\n      },\n    },\n    {\n      name: 'Azure Cloud Functions',\n      check: function() {\n        return process.env.hasOwnProperty(\n          'WEBSITE_FUNCTIONS_AZUREMONITOR_CATEGORIES'\n        )\n      },\n    },\n    {\n      name: 'Azure Compute',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('ORYX_ENV_TYPE') &&\n          process.env.hasOwnProperty('WEBSITE_INSTANCE_ID') &&\n          process.env.ORYX_ENV_TYPE === 'AppService'\n        )\n      },\n    },\n    {\n      name: 'Mongo Stitch',\n      check: function() {\n        return typeof crossGlobal.StitchError === 'function'\n      },\n    },\n    {\n      name: 'Render',\n      check: function() {\n        return process.env.hasOwnProperty('RENDER_SERVICE_ID')\n      },\n    },\n    {\n      name: 'Begin',\n      check: function() {\n        return process.env.hasOwnProperty('BEGIN_DATA_SCOPE_ID')\n      },\n    },\n  ]\n  var detectedEnv = runtimeEnvs.find(env => env.check())\n\n  return detectedEnv ? detectedEnv.name : 'unknown'\n}\n\n/**\n * If defined, returns the given value. Otherwise, returns the default value.\n * @param {any} obj The given value.\n * @param {any} def The default value.\n * @private\n */\nfunction defaults(obj, def) {\n  if (obj === undefined) {\n    return def\n  } else {\n    return obj\n  }\n}\n\n/**\n * Used for functions that take an options objects.\n * Fills in defaults for options not provided.\n * Throws errors for provided options that aren't recognized.\n * A default value of `undefined` is used to indicate that the option must be provided.\n * @private\n */\nfunction applyDefaults(provided, defaults) {\n  var out = {}\n\n  for (var providedKey in provided) {\n    if (!(providedKey in defaults)) {\n      throw new Error('No such option ' + providedKey)\n    }\n    out[providedKey] = provided[providedKey]\n  }\n\n  for (var defaultsKey in defaults) {\n    if (!(defaultsKey in out)) {\n      out[defaultsKey] = defaults[defaultsKey]\n    }\n  }\n\n  return out\n}\n\n/**\n * Returns a new object without any keys where the value would be null or undefined.\n * @private\n * */\nfunction removeNullAndUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== null && val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a new object without any keys where the value would be undefined.\n * @private\n * */\nfunction removeUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a boolean stating if the given object has a given property\n * @private\n * */\nfunction checkInstanceHasProperty(obj, prop) {\n  return typeof obj === 'object' && obj !== null && Boolean(obj[prop])\n}\n\nfunction formatUrl(base, path, query) {\n  query = typeof query === 'object' ? querystringify(query) : query\n  return [\n    base,\n    path ? (path.charAt(0) === '/' ? '' : '/' + path) : '',\n    query ? (query.charAt(0) === '?' ? '' : '?' + query) : '',\n  ].join('')\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || ''\n\n  var pairs = [],\n    value,\n    key\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?'\n\n  for (key in obj) {\n    if (checkInstanceHasProperty(obj, key)) {\n      value = obj[key]\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undefined || isNaN(value))) {\n        value = ''\n      }\n\n      key = encode(key)\n      value = encode(value)\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue\n      pairs.push(key + '=' + value)\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : ''\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input)\n  } catch (e) {\n    return null\n  }\n}\n\n/**\n * Merge two objects into one\n * @param obj1\n * @param obj2\n * @returns obj3 a new object based on obj1 and obj2\n */\nfunction mergeObjects(obj1, obj2) {\n  var obj3 = {}\n  for (var attrname in obj1) {\n    obj3[attrname] = obj1[attrname]\n  }\n  for (var attrname in obj2) {\n    obj3[attrname] = obj2[attrname]\n  }\n  return obj3\n}\n\n/**\n * Resolves which Fetch API compatible function to use. If an override is\n * provided, returns the override. If no override and the global (window) has\n * \"fetch\" property, return the native fetch. Otherwise returns the cross-fetch polyfill.\n *\n * @param {?function} fetchOverride An Fetch API compatible function to use.\n * @returns {function} A Fetch API compatible function.\n * @private\n */\nfunction resolveFetch(fetchOverride) {\n  if (typeof fetchOverride === 'function') {\n    return fetchOverride\n  }\n\n  if (typeof crossGlobal.fetch === 'function') {\n    // NB. Rebinding to global is needed for Safari\n    return crossGlobal.fetch.bind(crossGlobal)\n  }\n\n  return require('cross-fetch')\n}\n\nmodule.exports = {\n  crossGlobal: crossGlobal,\n  mergeObjects: mergeObjects,\n  formatUrl: formatUrl,\n  querystringify: querystringify,\n  inherits: inherits,\n  isNodeEnv: isNodeEnv,\n  getEnvVariable: getEnvVariable,\n  defaults: defaults,\n  applyDefaults: applyDefaults,\n  removeNullAndUndefinedValues: removeNullAndUndefinedValues,\n  removeUndefinedValues: removeUndefinedValues,\n  checkInstanceHasProperty: checkInstanceHasProperty,\n  getBrowserDetails: getBrowserDetails,\n  getBrowserOsDetails: getBrowserOsDetails,\n  getNodeRuntimeEnv: getNodeRuntimeEnv,\n  resolveFetch: resolveFetch,\n}\n", "'use strict'\n\nvar util = require('./_util')\n\n/**\n * A representation of a FaunaDB Query Expression. Generally, you shouldn't need\n * to use this class directly; use the Query helpers defined in {@link module:query}.\n *\n * @param {Object} obj The object that represents a Query to be treated as an Expression.\n * @constructor\n */\nfunction Expr(obj) {\n  this.raw = obj\n}\n\nExpr.prototype._isFaunaExpr = true\n\nExpr.prototype.toJSON = function() {\n  return this.raw\n}\n\nExpr.prototype.toFQL = function() {\n  return exprToString(this.raw)\n}\n\nvar varArgsFunctions = [\n  'Do',\n  'Call',\n  'Union',\n  'Intersection',\n  'Difference',\n  'Equals',\n  'Add',\n  'BitAnd',\n  'BitOr',\n  'BitXor',\n  'Divide',\n  'Max',\n  'Min',\n  'Modulo',\n  'Multiply',\n  'Subtract',\n  'LT',\n  'LTE',\n  'GT',\n  'GTE',\n  'And',\n  'Or',\n]\n\n// FQL function names come across the wire as all lowercase letters\n// (like the key of this object). Not all are properly snake-cased\n// on the Core side, which causes improper capitalizations.\n//\n// JS Driver patch: https://faunadb.atlassian.net/browse/FE-540\n// Core update: https://faunadb.atlassian.net/browse/ENG-2110\n\nvar specialCases = {\n  containsstrregex: 'ContainsStrRegex',\n  containsstr: 'ContainsStr',\n  endswith: 'EndsWith',\n  findstr: 'FindStr',\n  findstrregex: 'FindStrRegex',\n  gt: 'GT',\n  gte: 'GTE',\n  is_nonempty: 'is_non_empty',\n  lowercase: 'LowerCase',\n  lt: 'LT',\n  lte: 'LTE',\n  ltrim: 'LTrim',\n  ngram: 'NGram',\n  rtrim: 'RTrim',\n  regexescape: 'RegexEscape',\n  replacestr: 'ReplaceStr',\n  replacestrregex: 'ReplaceStrRegex',\n  startswith: 'StartsWith',\n  substring: 'SubString',\n  titlecase: 'TitleCase',\n  uppercase: 'UpperCase',\n}\n\n/**\n *\n * @param {Expr} expression A FQL expression\n * @returns {Boolean} Returns true for valid expressions\n * @private\n */\nfunction isExpr(expression) {\n  return (\n    expression instanceof Expr ||\n    util.checkInstanceHasProperty(expression, '_isFaunaExpr')\n  )\n}\n\n/**\n *\n * @param {Object} obj An object to print\n * @returns {String} String representation of object\n * @private\n */\nfunction printObject(obj) {\n  return (\n    '{' +\n    Object.keys(obj)\n      .map(function(k) {\n        return '\"' + k + '\"' + ': ' + exprToString(obj[k])\n      })\n      .join(', ') +\n    '}'\n  )\n}\n\n/**\n *\n * @param {Array} arr An array to print\n * @param {Function} toStr Function used for stringification\n * @returns {String} String representation of array\n * @private\n */\nfunction printArray(arr, toStr) {\n  return arr\n    .map(function(item) {\n      return toStr(item)\n    })\n    .join(', ')\n}\n\n/**\n *\n * @param {String} fn A snake-case FQL function name\n * @returns {String} The correpsonding camel-cased FQL function name\n * @private\n */\nfunction convertToCamelCase(fn) {\n  // For FQL functions with special formatting concerns, we\n  // use the specialCases object above to define their casing.\n  if (fn in specialCases) fn = specialCases[fn]\n\n  return fn\n    .split('_')\n    .map(function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1)\n    })\n    .join('')\n}\n\nvar exprToString = function(expr, caller) {\n  // If expr is a Expr, we want to parse expr.raw instead\n  if (isExpr(expr)) {\n    if ('value' in expr) return expr.toString()\n    expr = expr.raw\n  }\n\n  // Return early to avoid extra work if null\n  if (expr === null) {\n    return 'null'\n  }\n\n  // Return stringified value if expression is not an Object or Array\n  switch (typeof expr) {\n    case 'string':\n      return JSON.stringify(expr)\n    case 'symbol':\n    case 'number':\n    case 'boolean':\n      return expr.toString()\n    case 'undefined':\n      return 'undefined'\n  }\n\n  // Handle expression Arrays\n  if (Array.isArray(expr)) {\n    var array = printArray(expr, exprToString)\n    return varArgsFunctions.indexOf(caller) != -1 ? array : '[' + array + ']'\n  }\n\n  // Parse expression Objects\n  if ('match' in expr) {\n    var matchStr = exprToString(expr['match'])\n    var terms = expr['terms'] || []\n\n    if (isExpr(terms)) terms = terms.raw\n\n    if (Array.isArray(terms) && terms.length == 0)\n      return 'Match(' + matchStr + ')'\n\n    if (Array.isArray(terms)) {\n      return (\n        'Match(' + matchStr + ', [' + printArray(terms, exprToString) + '])'\n      )\n    }\n\n    return 'Match(' + matchStr + ', ' + exprToString(terms) + ')'\n  }\n\n  if ('paginate' in expr) {\n    var exprKeys = Object.keys(expr)\n    if (exprKeys.length === 1) {\n      return 'Paginate(' + exprToString(expr['paginate']) + ')'\n    }\n\n    var expr2 = Object.assign({}, expr)\n    delete expr2['paginate']\n\n    return (\n      'Paginate(' +\n      exprToString(expr['paginate']) +\n      ', ' +\n      printObject(expr2) +\n      ')'\n    )\n  }\n\n  if ('let' in expr && 'in' in expr) {\n    var letExpr = ''\n\n    if (Array.isArray(expr['let']))\n      letExpr = '[' + printArray(expr['let'], printObject) + ']'\n    else letExpr = printObject(expr['let'])\n\n    return 'Let(' + letExpr + ', ' + exprToString(expr['in']) + ')'\n  }\n\n  if ('object' in expr) return printObject(expr['object'])\n\n  if ('merge' in expr) {\n    if (expr.lambda) {\n      return (\n        'Merge(' +\n        exprToString(expr.merge) +\n        ', ' +\n        exprToString(expr.with) +\n        ', ' +\n        exprToString(expr.lambda) +\n        ')'\n      )\n    }\n\n    return (\n      'Merge(' + exprToString(expr.merge) + ', ' + exprToString(expr.with) + ')'\n    )\n  }\n\n  if ('lambda' in expr) {\n    return (\n      'Lambda(' +\n      exprToString(expr['lambda']) +\n      ', ' +\n      exprToString(expr['expr']) +\n      ')'\n    )\n  }\n\n  if ('filter' in expr) {\n    return (\n      'Filter(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['filter']) +\n      ')'\n    )\n  }\n\n  if ('call' in expr) {\n    return (\n      'Call(' +\n      exprToString(expr['call']) +\n      ', ' +\n      exprToString(expr['arguments']) +\n      ')'\n    )\n  }\n\n  if ('map' in expr) {\n    return (\n      'Map(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['map']) +\n      ')'\n    )\n  }\n\n  if ('foreach' in expr) {\n    return (\n      'Foreach(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['foreach']) +\n      ')'\n    )\n  }\n\n  var keys = Object.keys(expr)\n  var fn = keys[0]\n  fn = convertToCamelCase(fn)\n\n  // The filter prevents zero arity functions from having a null argument\n  // This only works under the assumptions\n  // that there are no functions where a single 'null' argument makes sense.\n  var args = keys\n    .filter(k => expr[k] !== null || keys.length > 1)\n    .map(k => exprToString(expr[k], fn))\n    .join(', ')\n\n  return fn + '(' + args + ')'\n}\n\nExpr.toString = exprToString\n\nmodule.exports = Expr\n", "'use strict'\n\nvar util = require('./_util')\n\n/**\n * FaunaDB error types. Request errors can originate from the client (e.g. bad\n * method parameters) or from the FaunaDB Server (e.g. invalid queries,\n * timeouts.) Server errors will subclass {@link module:errors~FaunaHTTPError}.\n * Stream errors will subclass {@link module:errors~StreamError}.\n *\n * @module errors\n */\n\n/**\n * The base exception type for all FaunaDB errors.\n *\n * @param {string} message\n * @extends Error\n * @constructor\n */\nfunction FaunaError(name, message, description) {\n  Error.call(this)\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor)\n  } else this.stack = new Error().stack\n\n  /**\n   * Name of this exception.\n   * @type {string}\n   */\n  this.name = name\n\n  /**\n   * Message for this exception.\n   * @type {string}\n   */\n  this.message = message\n\n  /**\n   * Description for this exception.\n   * @type {string}\n   */\n  this.description = description\n}\n\nutil.inherits(FaunaError, Error)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidValue(message) {\n  FaunaError.call(this, 'InvalidValue', message)\n}\n\nutil.inherits(InvalidValue, FaunaError)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidArity(min, max, actual, callerFunc) {\n  var arityInfo = `${callerFunc} function requires ${messageForArity(\n    min,\n    max\n  )} argument(s) but ${actual} were given`\n  var documentationLink = logDocumentationLink(callerFunc)\n\n  FaunaError.call(this, 'InvalidArity', `${arityInfo}\\n${documentationLink}`)\n\n  /**\n   * Minimum number of arguments.\n   * @type {number}\n   */\n  this.min = min\n\n  /**\n   * Maximum number of arguments.\n   * @type {number}\n   */\n  this.max = max\n\n  /**\n   * Actual number of arguments called with.\n   * @type {number}\n   */\n  this.actual = actual\n\n  function messageForArity(min, max) {\n    if (max === null) return 'at least ' + min\n    if (min === null) return 'up to ' + max\n    if (min === max) return min\n    return 'from ' + min + ' to ' + max\n  }\n\n  function logDocumentationLink(functionName) {\n    var docsURL = 'https://docs.fauna.com/fauna/current/api/fql/functions/'\n    return `For more info, see the docs: ${docsURL}${functionName.toLowerCase()}`\n  }\n}\n\nutil.inherits(InvalidArity, FaunaError)\n\n/**\n * Base exception type for errors returned by the FaunaDB server.\n *\n * @param {RequestResult} requestResult\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction FaunaHTTPError(name, requestResult) {\n  var response = requestResult.responseContent\n  var errors = response.errors\n  var message = errors.length === 0 ? '(empty \"errors\")' : errors[0].code\n  var description =\n    errors.length === 0 ? '(empty \"errors\")' : errors[0].description\n  FaunaError.call(this, name, message, description)\n\n  /**\n   * A wrapped {@link RequestResult} object, containing the request and response\n   * context of the failed request.\n   *\n   * @type {RequestResult}\n   */\n  this.requestResult = requestResult\n}\n\nutil.inherits(FaunaHTTPError, FaunaError)\n\n/**\n * Convenience method to return the errors from the response object.\n *\n * @returns {Object}\n */\nFaunaHTTPError.prototype.errors = function() {\n  return this.requestResult.responseContent.errors\n}\n\n/**\n * Takes a {@link RequestResult} and throws an appropriate exception if\n * it contains a failed request.\n *\n * @param requestResult {RequestResult}\n */\nFaunaHTTPError.raiseForStatusCode = function(requestResult) {\n  var code = requestResult.statusCode\n  if (code < 200 || code >= 300) {\n    switch (code) {\n      case 400:\n        throw new BadRequest(requestResult)\n      case 401:\n        throw new Unauthorized(requestResult)\n      case 403:\n        throw new PermissionDenied(requestResult)\n      case 404:\n        throw new NotFound(requestResult)\n      case 405:\n        throw new MethodNotAllowed(requestResult)\n      case 429:\n        throw new TooManyRequests(requestResult)\n      case 500:\n        throw new InternalError(requestResult)\n      case 503:\n        throw new UnavailableError(requestResult)\n      default:\n        throw new FaunaHTTPError('UnknownError', requestResult)\n    }\n  }\n}\n\n/**\n * A HTTP 400 error.\n *\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction BadRequest(requestResult) {\n  FaunaHTTPError.call(this, 'BadRequest', requestResult)\n}\n\nutil.inherits(BadRequest, FaunaHTTPError)\n\n/**\n * A HTTP 401 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction Unauthorized(requestResult) {\n  FaunaHTTPError.call(this, 'Unauthorized', requestResult)\n  this.message = this.message +=\n    '. Check that endpoint, schema, port and secret are correct during client’s instantiation'\n}\n\nutil.inherits(Unauthorized, FaunaHTTPError)\n\n/**\n * A HTTP 403 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction PermissionDenied(requestResult) {\n  FaunaHTTPError.call(this, 'PermissionDenied', requestResult)\n}\n\nutil.inherits(PermissionDenied, FaunaHTTPError)\n\n/**\n * A HTTP 404 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction NotFound(requestResult) {\n  FaunaHTTPError.call(this, 'NotFound', requestResult)\n}\n\nutil.inherits(NotFound, FaunaHTTPError)\n\n/**\n * A HTTP 405 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction MethodNotAllowed(requestResult) {\n  FaunaHTTPError.call(this, 'MethodNotAllowed', requestResult)\n}\n\nutil.inherits(MethodNotAllowed, FaunaHTTPError)\n\n/**\n * A HTTP 429 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction TooManyRequests(requestResult) {\n  FaunaHTTPError.call(this, 'TooManyRequests', requestResult)\n}\n\nutil.inherits(TooManyRequests, FaunaHTTPError)\n\n/**\n * A HTTP 500 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction InternalError(requestResult) {\n  FaunaHTTPError.call(this, 'InternalError', requestResult)\n}\n\nutil.inherits(InternalError, FaunaHTTPError)\n\n/**\n * A HTTP 503 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction UnavailableError(requestResult) {\n  FaunaHTTPError.call(this, 'UnavailableError', requestResult)\n}\n\nutil.inherits(UnavailableError, FaunaHTTPError)\n\n/**\n * The base exception type for all stream related errors.\n *\n * @constructor\n * @param {string} name The error class name.\n * @param {string} message The error message.\n * @param {string} description The error detailed description.\n * @extends module:errors~FaunaError\n */\nfunction StreamError(name, message, description) {\n  FaunaError.call(this, name, message, description)\n}\n\nutil.inherits(StreamError, FaunaError)\n\n/**\n * An error thrown by the client when streams are not supported by the current\n * platform.\n *\n * @constructor\n * @param {string} description The error description.\n * @extends module:errors~StreamError\n */\nfunction StreamsNotSupported(description) {\n  FaunaError.call(\n    this,\n    'StreamsNotSupported',\n    'streams not supported',\n    description\n  )\n}\n\nutil.inherits(StreamsNotSupported, StreamError)\n\n/**\n * An Error thrown by the server when something wrong happened with the\n * subscribed stream.\n * @constructor\n * @param {Object} event The error event.\n * @property {Object} event The error event.\n * @extends module:errors~StreamError\n */\nfunction StreamErrorEvent(event) {\n  var error = event.data || {}\n  FaunaError.call(this, 'StreamErrorEvent', error.code, error.description)\n  this.event = event\n}\n\nutil.inherits(StreamErrorEvent, StreamError)\n\n/**\n * An error thrown when attempting to operate on a closed Client instance.\n *\n * @param {string} message The error message.\n * @param {?string} description The error description.\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction ClientClosed(message, description) {\n  FaunaError.call(this, 'ClientClosed', message, description)\n}\n\nutil.inherits(ClientClosed, FaunaError)\n\nmodule.exports = {\n  FaunaError: FaunaError,\n  ClientClosed: ClientClosed,\n  FaunaHTTPError: FaunaHTTPError,\n  InvalidValue: InvalidValue,\n  InvalidArity: InvalidArity,\n  BadRequest: BadRequest,\n  Unauthorized: Unauthorized,\n  PermissionDenied: PermissionDenied,\n  NotFound: NotFound,\n  MethodNotAllowed: MethodNotAllowed,\n  TooManyRequests: TooManyRequests,\n  InternalError: InternalError,\n  UnavailableError: UnavailableError,\n  StreamError: StreamError,\n  StreamsNotSupported: StreamsNotSupported,\n  StreamErrorEvent: StreamErrorEvent,\n}\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict'\n\nvar base64 = require('base64-js')\nvar deprecate = require('util-deprecate')\nvar errors = require('./errors')\nvar Expr = require('./Expr')\nvar util = require('./_util')\nvar nodeUtil = util.isNodeEnv() ? require('util') : null\n\nvar customInspect = nodeUtil && nodeUtil.inspect.custom\nvar stringify = nodeUtil ? nodeUtil.inspect : JSON.stringify\n\n/**\n * FaunaDB value types. Generally, these collections do not need to be instantiated\n * directly; they can be constructed through helper methods in {@link module:query}.\n *\n * Instances of these collections will be returned in responses if the response object\n * contains these values. For example, a FaunaDB response containing\n *`{ \"@ref\": { \"id\": \"123\", \"collection\": { \"@ref\": { \"id\": \"frogs\", \"collection\": { \"@ref\": { \"id\": \"collectiones\" } } } } } }`\n * will be returned as `new values.Ref(\"123\", new values.Ref(\"frogs\", values.Native.COLLECTIONS))`.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi#simple-type)\n * for more information.\n *\n * @module values\n */\n\n/**\n * Base type for FaunaDB value objects.\n *\n * @extends Expr\n * @abstract\n * @constructor\n */\nfunction Value() {}\n\nutil.inherits(Value, Expr)\n\nValue.prototype._isFaunaValue = true\n\n/**\n * FaunaDB ref.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string} id\n *   The id portion of the ref.\n * @param {Ref} [collection]\n *   The collection portion of the ref.\n * @param {Ref} [database]\n *   The database portion of the ref.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction Ref(id, collection, database) {\n  if (!id) throw new errors.InvalidValue('id cannot be null or undefined')\n\n  this.value = { id: id }\n  if (collection) this.value['collection'] = collection\n  if (database) this.value['database'] = database\n}\n\nutil.inherits(Ref, Value)\n\nRef.prototype._isFaunaRef = true\n\n/**\n * Gets the collection part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#collection\n */\nObject.defineProperty(Ref.prototype, 'collection', {\n  get: function() {\n    return this.value['collection']\n  },\n})\n\n/**\n * DEPRECATED. Gets the class part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#class\n */\nObject.defineProperty(Ref.prototype, 'class', {\n  get: deprecate(function() {\n    return this.value['collection']\n  }, 'class is deprecated, use collection instead'),\n})\n\n/**\n * Gets the database part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#database\n */\nObject.defineProperty(Ref.prototype, 'database', {\n  get: function() {\n    return this.value['database']\n  },\n})\n\n/**\n * Gets the id part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#id\n */\nObject.defineProperty(Ref.prototype, 'id', {\n  get: function() {\n    return this.value['id']\n  },\n})\n\n/** @ignore */\nRef.prototype.toJSON = function() {\n  return { '@ref': this.value }\n}\n\nwrapToString(Ref, function() {\n  var constructors = {\n    collections: 'Collection',\n    databases: 'Database',\n    indexes: 'Index',\n    functions: 'Function',\n    roles: 'Role',\n    access_providers: 'AccessProvider',\n  }\n\n  var isNative = function(ref) {\n    return ref.collection === undefined\n  }\n\n  var toString = function(ref) {\n    if (isNative(ref)) {\n      var db = ref.database !== undefined ? ref.database.toString() : ''\n\n      if (ref.id === 'access_providers') return 'AccessProviders(' + db + ')'\n\n      return ref.id.charAt(0).toUpperCase() + ref.id.slice(1) + '(' + db + ')'\n    }\n\n    if (isNative(ref.collection)) {\n      var constructor = constructors[ref.collection.id]\n      if (constructor !== undefined) {\n        var db =\n          ref.database !== undefined ? ', ' + ref.database.toString() : ''\n        return constructor + '(\"' + ref.id + '\"' + db + ')'\n      }\n    }\n\n    return 'Ref(' + toString(ref.collection) + ', \"' + ref.id + '\")'\n  }\n\n  return toString(this)\n})\n\n/** @ignore */\nRef.prototype.valueOf = function() {\n  return this.value\n}\n\n/**\n * Whether these are both Refs and have the same value.\n * @param {any} other\n * @returns {boolean}\n */\nRef.prototype.equals = function(other) {\n  return (\n    (other instanceof Ref ||\n      util.checkInstanceHasProperty(other, '_isFaunaRef')) &&\n    this.id === other.id &&\n    ((this.collection === undefined && other.collection === undefined) ||\n      this.collection.equals(other.collection)) &&\n    ((this.database === undefined && other.database === undefined) ||\n      this.database.equals(other.database))\n  )\n}\n\nvar Native = {\n  COLLECTIONS: new Ref('collections'),\n  INDEXES: new Ref('indexes'),\n  DATABASES: new Ref('databases'),\n  FUNCTIONS: new Ref('functions'),\n  ROLES: new Ref('roles'),\n  KEYS: new Ref('keys'),\n  ACCESS_PROVIDERS: new Ref('access_providers'),\n}\n\nNative.fromName = function(name) {\n  switch (name) {\n    case 'collections':\n      return Native.COLLECTIONS\n    case 'indexes':\n      return Native.INDEXES\n    case 'databases':\n      return Native.DATABASES\n    case 'functions':\n      return Native.FUNCTIONS\n    case 'roles':\n      return Native.ROLES\n    case 'keys':\n      return Native.KEYS\n    case 'access_providers':\n      return Native.ACCESS_PROVIDERS\n  }\n  return new Ref(name)\n}\n\n/**\n * FaunaDB Set.\n * This represents a set returned as part of a response.\n * This looks like `{\"@set\": set_query}`.\n * For query sets see {@link match}, {@link union},\n * {@link intersection}, {@link difference}, and {@link join}.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction SetRef(value) {\n  /** Raw query object. */\n  this.value = value\n}\n\nutil.inherits(SetRef, Value)\n\nwrapToString(SetRef, function() {\n  return Expr.toString(this.value)\n})\n\n/** @ignore */\nSetRef.prototype.toJSON = function() {\n  return { '@set': this.value }\n}\n\n/** FaunaDB time. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value If a Date, this is converted to a string.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaTime(value) {\n  if (value instanceof Date) {\n    value = value.toISOString()\n  } else if (!(value.charAt(value.length - 1) === 'Z')) {\n    throw new errors.InvalidValue(\"Only allowed timezone is 'Z', got: \" + value)\n  }\n\n  this.value = value\n}\n\nutil.inherits(FaunaTime, Value)\n\n/**\n * Returns the date wrapped by this object.\n * This is lossy as Dates have millisecond rather than nanosecond precision.\n *\n * @member {Date}\n * @name module:values~FaunaTime#date\n */\nObject.defineProperty(FaunaTime.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaTime, function() {\n  return 'Time(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaTime.prototype.toJSON = function() {\n  return { '@ts': this.value }\n}\n\n/** FaunaDB date. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value\n *   If a Date, this is converted to a string, with time-of-day discarded.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaDate(value) {\n  if (value instanceof Date) {\n    // The first 10 characters 'YYYY-MM-DD' are the date portion.\n    value = value.toISOString().slice(0, 10)\n  }\n\n  /**\n   * ISO8601 date.\n   * @type {string}\n   */\n  this.value = value\n}\n\nutil.inherits(FaunaDate, Value)\n\n/**\n * @member {Date}\n * @name module:values~FaunaDate#date\n */\nObject.defineProperty(FaunaDate.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaDate, function() {\n  return 'Date(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaDate.prototype.toJSON = function() {\n  return { '@date': this.value }\n}\n\n/** FaunaDB bytes. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {Uint8Array|ArrayBuffer|string} value\n *    If ArrayBuffer it's converted to Uint8Array\n *    If string it must be base64 encoded and it's converted to Uint8Array\n * @extends module:values~Value\n * @constructor\n */\nfunction Bytes(value) {\n  if (value instanceof ArrayBuffer) {\n    this.value = new Uint8Array(value)\n  } else if (typeof value === 'string') {\n    this.value = base64.toByteArray(value)\n  } else if (value instanceof Uint8Array) {\n    this.value = value\n  } else {\n    throw new errors.InvalidValue(\n      'Bytes type expect argument to be either Uint8Array|ArrayBuffer|string, got: ' +\n        stringify(value)\n    )\n  }\n}\n\nutil.inherits(Bytes, Value)\n\nwrapToString(Bytes, function() {\n  return 'Bytes(\"' + base64.fromByteArray(this.value) + '\")'\n})\n\n/** @ignore */\nBytes.prototype.toJSON = function() {\n  return { '@bytes': base64.fromByteArray(this.value) }\n}\n\n/** FaunaDB query. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {any} value\n * @extends module:values~Value\n * @constructor\n */\nfunction Query(value) {\n  this.value = value\n}\n\nutil.inherits(Query, Value)\n\nwrapToString(Query, function() {\n  return 'Query(' + Expr.toString(this.value) + ')'\n})\n\n/** @ignore */\nQuery.prototype.toJSON = function() {\n  return { '@query': this.value }\n}\n\n/** @ignore */\nfunction wrapToString(type, fn) {\n  type.prototype.toString = fn\n  type.prototype.inspect = fn\n\n  if (customInspect) {\n    type.prototype[customInspect] = fn\n  }\n}\n\nmodule.exports = {\n  Value: Value,\n  Ref: Ref,\n  Native: Native,\n  SetRef: SetRef,\n  FaunaTime: FaunaTime,\n  FaunaDate: FaunaDate,\n  Bytes: Bytes,\n  Query: Query,\n}\n", "'use strict'\n\nvar annotate = require('fn-annotate')\nvar deprecate = require('util-deprecate')\nvar Expr = require('./Expr')\nvar errors = require('./errors')\nvar values = require('./values')\nvar objectAssign = require('object-assign')\nvar util = require('./_util')\n\n/**\n * This module contains functions used to construct FaunaDB Queries.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi)\n * for per-function documentation.\n *\n * @module query\n */\n\n/**\n * @typedef {(Expr|string|number|boolean|Object)} module:query~ExprTerm\n */\n\n/**\n * @typedef {(module:query~ExprTerm|Array<module:query~ExprTerm>)} module:query~ExprArg\n */\n\n// Type helpers\n\n/**\n * If one parameter is provided, constructs a literal Ref value.\n * The string `collections/widget/123` will be equivalent to `new values.Ref('123', new values.Ref('widget', values.Native.COLLECTIONS))`\n *\n * If two are provided, constructs a Ref() function that, when evaluated, returns a Ref value.\n *\n * @param {string|module:query~ExprArg} ref|cls\n *   Alone, the ref in path form. Combined with `id`, must be a collection ref.\n * @param {module:query~ExprArg} [id]\n *   A numeric id of the given collection.\n * @return {Expr}\n */\nfunction Ref() {\n  arity.between(1, 2, arguments, Ref.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ '@ref': wrap(arguments[0]) })\n    case 2:\n      return new Expr({ ref: wrap(arguments[0]), id: wrap(arguments[1]) })\n  }\n}\n\n/**\n * @param {Uint8Array|ArrayBuffer|module:query~ExprArg} bytes\n *   A base64 encoded string or a byte array\n * @return {Expr}\n */\nfunction Bytes(bytes) {\n  arity.exact(1, arguments, Bytes.name)\n  return new values.Bytes(bytes)\n}\n\n// Basic forms\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} msg\n *   The message to send back to the client.\n * @return {Expr}\n * */\nfunction Abort(msg) {\n  arity.exact(1, arguments, Abort.name)\n  return new Expr({ abort: wrap(msg) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} timestamp\n *   An Expr that will evaluate to a Time.\n * @param {module:query~ExprArg} expr\n *   The Expr to run at the given snapshot time.\n * @return {Expr}\n * */\nfunction At(timestamp, expr) {\n  arity.exact(2, arguments, At.name)\n  return new Expr({ at: wrap(timestamp), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} bindings\n *   A set of bindings to use within the given expression.\n * @param {module:query~ExprArg} in\n *   The expression to run with the given bindings.\n * @return {Expr}\n * */\nfunction Let(vars, expr) {\n  arity.exact(2, arguments, Let.name)\n  var bindings = []\n\n  if (Array.isArray(vars)) {\n    bindings = vars.map(function(item) {\n      return wrapValues(item)\n    })\n  } else {\n    bindings = Object.keys(vars)\n      .filter(function(k) {\n        return vars[k] !== undefined\n      })\n      .map(function(k) {\n        var b = {}\n        b[k] = wrap(vars[k])\n        return b\n      })\n  }\n\n  if (typeof expr === 'function') {\n    if (Array.isArray(vars)) {\n      var expr_vars = []\n\n      vars.forEach(function(item) {\n        Object.keys(item).forEach(function(name) {\n          expr_vars.push(Var(name))\n        })\n      })\n\n      expr = expr.apply(null, expr_vars)\n    } else {\n      expr = expr.apply(\n        null,\n        Object.keys(vars).map(function(name) {\n          return Var(name)\n        })\n      )\n    }\n  }\n\n  return new Expr({ let: bindings, in: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} varName\n *   The name of the bound var.\n * @return {Expr}\n * */\nfunction Var(varName) {\n  arity.exact(1, arguments, Var.name)\n  return new Expr({ var: wrap(varName) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} condition\n *   An expression that returns a boolean.\n * @param {module:query~ExprArg} then\n *   The expression to run if condition is true.\n * @param {module:query~ExprArg} else\n *   The expression to run if the condition is false.\n * @return {Expr}\n * */\nfunction If(condition, then, _else) {\n  arity.exact(3, arguments, If.name)\n  return new Expr({ if: wrap(condition), then: wrap(then), else: wrap(_else) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} args\n *   A series of expressions to run.\n * @return {Expr}\n * */\nfunction Do() {\n  arity.min(1, arguments, Do.name)\n  var args = argsToArray(arguments)\n  return new Expr({ do: wrap(args) })\n}\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} fields\n *   The object to be escaped.\n * @return {Expr}\n * */\nvar objectFunction = function(fields) {\n  arity.exact(1, arguments, objectFunction.name)\n  return new Expr({ object: wrapValues(fields) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Directly produces a FaunaDB Lambda expression as described in the FaunaDB reference\n * documentation.\n *\n * @param {module:query~ExprArg} var\n *   The names of the variables to be bound in this lambda expression.\n * @param {module:query~ExprArg} expr\n *   The lambda expression.\n * @return {Expr}\n */\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Takes a Javascript function, and will transform it\n * into the appropriate FaunaDB query. For example:\n *\n * ```\n * Lambda(function(a) { return Add(a, a); });\n * // Returns { lambda: 'a', expr: { add: [{ var: a }, { var: a }] } }\n * ```\n * Note that the driver will handle wrapping all usages of the lambda's bound\n * variables with the {@link modules:query~Var} function.\n *\n * @param {function} func\n *   Takes the provided function and produces the appropriate FaunaDB query expression.\n * @return {Expr}\n *\n */ function Lambda() {\n  arity.between(1, 2, arguments, Lambda.name)\n  switch (arguments.length) {\n    case 1:\n      var value = arguments[0]\n      if (typeof value === 'function') {\n        return _lambdaFunc(value)\n      } else if (\n        value instanceof Expr ||\n        util.checkInstanceHasProperty(value, '_isFaunaExpr')\n      ) {\n        return value\n      } else {\n        throw new errors.InvalidValue(\n          'Lambda function takes either a Function or an Expr.'\n        )\n      }\n    case 2:\n      var var_name = arguments[0]\n      var expr = arguments[1]\n\n      return _lambdaExpr(var_name, expr)\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaFunc(func) {\n  var vars = annotate(func)\n  switch (vars.length) {\n    case 0:\n      throw new errors.InvalidValue(\n        'Provided Function must take at least 1 argument.'\n      )\n    case 1:\n      return _lambdaExpr(vars[0], func(Var(vars[0])))\n    default:\n      return _lambdaExpr(\n        vars,\n        func.apply(\n          null,\n          vars.map(function(name) {\n            return Var(name)\n          })\n        )\n      )\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaExpr(var_name, expr) {\n  return new Expr({ lambda: wrap(var_name), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Invokes a given function passing in the provided arguments\n *\n * ```\n * Call(Ref(\"functions/a_function\"), 1, 2)\n * ```\n *\n * @param {module:query~ExprArg} ref\n *   The ref of the UserDefinedFunction to call\n * @param {...module:query~ExprArg} args\n *   A series of values to pass as arguments to the UDF.\n * @return {Expr}\n * */\nfunction Call(ref) {\n  arity.min(1, arguments, Call.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ call: wrap(ref), arguments: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Constructs a `@query` type using the Lambda() or a function.\n *\n * ```\n * Query(Lambda(['a', 'b'], Add(Var('a'), Var('b'))))\n * Query(function (a, b) { return Add(a, b) })\n * ```\n *\n * @param {module:query~ExprArg|function} lambda\n *   A function to escape as a query.\n * @return {Expr}\n * */\nfunction Query(lambda) {\n  arity.exact(1, arguments, Query.name)\n  return new Expr({ query: wrap(lambda) })\n}\n\n// Collection functions\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be mapped over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Map(collection, lambda_expr) {\n  arity.exact(2, arguments, Map.name)\n  return new Expr({ map: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be iterated over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Foreach(collection, lambda_expr) {\n  arity.exact(2, arguments, Foreach.name)\n  return new Expr({ foreach: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be filtered.\n * @param {module:query~ExprArg|function} lambda\n *   A function that returns a boolean used to filter unwanted values.\n * @return {Expr}\n * */\nfunction Filter(collection, lambda_expr) {\n  arity.exact(2, arguments, Filter.name)\n  return new Expr({ filter: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to take from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Take(number, collection) {\n  arity.exact(2, arguments, Take.name)\n  return new Expr({ take: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to drop from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Drop(number, collection) {\n  arity.exact(2, arguments, Drop.name)\n  return new Expr({ drop: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to prepend to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Prepend(elements, collection) {\n  arity.exact(2, arguments, Prepend.name)\n  return new Expr({ prepend: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to append to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Append(elements, collection) {\n  arity.exact(2, arguments, Append.name)\n  return new Expr({ append: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsEmpty(collection) {\n  arity.exact(1, arguments, IsEmpty.name)\n  return new Expr({ is_empty: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsNonEmpty(collection) {\n  arity.exact(1, arguments, IsNonEmpty.name)\n  return new Expr({ is_nonempty: wrap(collection) })\n}\n\n// Type check functions\n\n/**\n * Check if the expression is a number.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnumber\">IsNumber</a>\n */\nfunction IsNumber(expr) {\n  arity.exact(1, arguments, IsNumber.name)\n  return new Expr({ is_number: wrap(expr) })\n}\n\n/**\n * Check if the expression is a double.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdouble\">IsDouble</a>\n */\nfunction IsDouble(expr) {\n  arity.exact(1, arguments, IsDouble.name)\n  return new Expr({ is_double: wrap(expr) })\n}\n\n/**\n * Check if the expression is an integer.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isinteger\">IsInteger</a>\n */\nfunction IsInteger(expr) {\n  arity.exact(1, arguments, IsInteger.name)\n  return new Expr({ is_integer: wrap(expr) })\n}\n\n/**\n * Check if the expression is a boolean.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isboolean\">IsBoolean</a>\n */\nfunction IsBoolean(expr) {\n  arity.exact(1, arguments, IsBoolean.name)\n  return new Expr({ is_boolean: wrap(expr) })\n}\n\n/**\n * Check if the expression is null.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnull\">IsNull</a>\n */\nfunction IsNull(expr) {\n  arity.exact(1, arguments, IsNull.name)\n  return new Expr({ is_null: wrap(expr) })\n}\n\n/**\n * Check if the expression is a byte array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isbytes\">IsBytes</a>\n */\nfunction IsBytes(expr) {\n  arity.exact(1, arguments, IsBytes.name)\n  return new Expr({ is_bytes: wrap(expr) })\n}\n\n/**\n * Check if the expression is a timestamp.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istimestamp\">IsTimestamp</a>\n */\nfunction IsTimestamp(expr) {\n  arity.exact(1, arguments, IsTimestamp.name)\n  return new Expr({ is_timestamp: wrap(expr) })\n}\n\n/**\n * Check if the expression is a date.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdate\">IsDate</a>\n */\nfunction IsDate(expr) {\n  arity.exact(1, arguments, IsDate.name)\n  return new Expr({ is_date: wrap(expr) })\n}\n\n/**\n * Check if the expression is a string.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isstring\">IsString</a>\n */\nfunction IsString(expr) {\n  arity.exact(1, arguments, IsString.name)\n  return new Expr({ is_string: wrap(expr) })\n}\n\n/**\n * Check if the expression is an array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isarray\">IsArray</a>\n */\nfunction IsArray(expr) {\n  arity.exact(1, arguments, IsArray.name)\n  return new Expr({ is_array: wrap(expr) })\n}\n\n/**\n * Check if the expression is an object.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isobject\">IsObject</a>\n */\nfunction IsObject(expr) {\n  arity.exact(1, arguments, IsObject.name)\n  return new Expr({ is_object: wrap(expr) })\n}\n\n/**\n * Check if the expression is a reference.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isref\">IsRef</a>\n */\nfunction IsRef(expr) {\n  arity.exact(1, arguments, IsRef.name)\n  return new Expr({ is_ref: wrap(expr) })\n}\n\n/**\n * Check if the expression is a set.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isset\">IsSet</a>\n */\nfunction IsSet(expr) {\n  arity.exact(1, arguments, IsSet.name)\n  return new Expr({ is_set: wrap(expr) })\n}\n\n/**\n * Check if the expression is a document (either a reference or an instance).\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdoc\">IsDoc</a>\n */\nfunction IsDoc(expr) {\n  arity.exact(1, arguments, IsDoc.name)\n  return new Expr({ is_doc: wrap(expr) })\n}\n\n/**\n * Check if the expression is a lambda.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/islambda\">IsLambda</a>\n */\nfunction IsLambda(expr) {\n  arity.exact(1, arguments, IsLambda.name)\n  return new Expr({ is_lambda: wrap(expr) })\n}\n\n/**\n * Check if the expression is a collection.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscollection\">IsCollection</a>\n */\nfunction IsCollection(expr) {\n  arity.exact(1, arguments, IsCollection.name)\n  return new Expr({ is_collection: wrap(expr) })\n}\n\n/**\n * Check if the expression is a database.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdatabase\">IsDatabase</a>\n */\nfunction IsDatabase(expr) {\n  arity.exact(1, arguments, IsDatabase.name)\n  return new Expr({ is_database: wrap(expr) })\n}\n\n/**\n * Check if the expression is an index.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isindex\">IsIndex</a>\n */\nfunction IsIndex(expr) {\n  arity.exact(1, arguments, IsIndex.name)\n  return new Expr({ is_index: wrap(expr) })\n}\n\n/**\n * Check if the expression is a function.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isfunction\">IsFunction</a>\n */\nfunction IsFunction(expr) {\n  arity.exact(1, arguments, IsFunction.name)\n  return new Expr({ is_function: wrap(expr) })\n}\n\n/**\n * Check if the expression is a key.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iskey\">IsKey</a>\n */\nfunction IsKey(expr) {\n  arity.exact(1, arguments, IsKey.name)\n  return new Expr({ is_key: wrap(expr) })\n}\n\n/**\n * Check if the expression is a token.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istoken\">IsToken</a>\n */\nfunction IsToken(expr) {\n  arity.exact(1, arguments, IsToken.name)\n  return new Expr({ is_token: wrap(expr) })\n}\n\n/**\n * Check if the expression is credentials.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscredentials\">IsCredentials</a>\n */\nfunction IsCredentials(expr) {\n  arity.exact(1, arguments, IsCredentials.name)\n  return new Expr({ is_credentials: wrap(expr) })\n}\n\n/**\n * Check if the expression is a role.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isrole\">IsRole</a>\n */\nfunction IsRole(expr) {\n  arity.exact(1, arguments, IsRole.name)\n  return new Expr({ is_role: wrap(expr) })\n}\n\n// Read functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in either a Ref or SetRef.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to get the document.\n * @return {Expr}\n */\nfunction Get(ref, ts) {\n  arity.between(1, 2, arguments, Get.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ get: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} secret\n *   The key or token secret to lookup.\n * @return {Expr}\n */\nfunction KeyFromSecret(secret) {\n  arity.exact(1, arguments, KeyFromSecret.name)\n  return new Expr({ key_from_secret: wrap(secret) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/reduce).\n *\n * @param {module:query~ExprArg} lambda\n *   The accumulator function\n * @param {module:query~ExprArg} initial\n *   The initial value\n * @param {module:query~ExprArg} collection\n *   The colleciton to be reduced\n * @return {Expr}\n */\nfunction Reduce(lambda, initial, collection) {\n  arity.exact(3, arguments, Reduce.name)\n  return new Expr({\n    reduce: wrap(lambda),\n    initial: wrap(initial),\n    collection: wrap(collection),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * You may want to utilize {@link Client#paginate} to obtain a {@link PageHelper},\n * rather than using this query function directly.\n *\n * @param {module:query~ExprArg} set\n *   An expression resulting in a SetRef to page over.\n * @param {?Object} opts\n *  An object representing options for pagination.\n *    - size: Maximum number of results to return.\n *    - after: Return the next page of results after this cursor (inclusive).\n *    - before: Return the previous page of results before this cursor (exclusive).\n *    - sources: If true, include the source sets along with each element.\n * @return {Expr}\n */\nfunction Paginate(set, opts) {\n  arity.between(1, 2, arguments, Paginate.name)\n  opts = util.defaults(opts, {})\n\n  return new Expr(objectAssign({ paginate: wrap(set) }, wrapValues(opts)))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in a Ref.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to check for the document's existence.\n * @return {Expr}\n */\nfunction Exists(ref, ts) {\n  arity.between(1, 2, arguments, Exists.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ exists: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n// Write functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref (usually a CollectionRef) to create.\n * @param {?module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Create(collection_ref, params) {\n  arity.between(1, 2, arguments, Create.name)\n  return new Expr({ create: wrap(collection_ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to update.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Update(ref, params) {\n  arity.exact(2, arguments, Update.name)\n  return new Expr({ update: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to replace.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Replace(ref, params) {\n  arity.exact(2, arguments, Replace.name)\n  return new Expr({ replace: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to delete.\n * @return {Expr}\n */\nfunction Delete(ref) {\n  arity.exact(1, arguments, Delete.name)\n  return new Expr({ delete: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to insert against\n * @param {module:query~ExprArg} ts\n *   The valid time of the inserted event\n * @param {module:query~ExprArg} action\n *   Whether the event should be a Create, Update, or Delete.\n * @param {module:query~ExprArg} params\n *   If this is a Create or Update, the parameters of the document.\n * @return {Expr}\n */\nfunction Insert(ref, ts, action, params) {\n  arity.exact(4, arguments, Insert.name)\n  return new Expr({\n    insert: wrap(ref),\n    ts: wrap(ts),\n    action: wrap(action),\n    params: wrap(params),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document whose event should be removed.\n * @param {module:query~ExprArg} ts\n *   The valid time of the event.\n * @param {module:query~ExprArg} action\n *   The event action (Create, Update, or Delete) that should be removed.\n * @return {Expr}\n */\nfunction Remove(ref, ts, action) {\n  arity.exact(3, arguments, Remove.name)\n  return new Expr({ remove: wrap(ref), ts: wrap(ts), action: wrap(action) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a class.\n *     - name (required): the name of the class to create\n * @return {Expr}\n *\n * @deprecated use CreateCollection instead\n */\nfunction CreateClass(params) {\n  arity.exact(1, arguments, CreateClass.name)\n  return new Expr({ create_class: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a collection.\n *     - name (required): the name of the collection to create\n * @return {Expr}\n */\nfunction CreateCollection(params) {\n  arity.exact(1, arguments, CreateCollection.name)\n  return new Expr({ create_collection: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a database.\n *     - name (required): the name of the database to create\n * @return {Expr}\n */\nfunction CreateDatabase(params) {\n  arity.exact(1, arguments, CreateDatabase.name)\n  return new Expr({ create_database: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create an index.\n *     - name (required): the name of the index to create\n *     - source: One or more source objects describing source collections and (optional) field bindings.\n *     - terms: An array of term objects describing the fields to be indexed. Optional\n *     - values: An array of value objects describing the fields to be covered. Optional\n *     - unique: If true, maintains a uniqueness constraint on combined terms and values. Optional\n *     - partitions: The number of sub-partitions within each term. Optional\n * @return {Expr}\n */\nfunction CreateIndex(params) {\n  arity.exact(1, arguments, CreateIndex.name)\n  return new Expr({ create_index: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new key\n *     - database: Ref of the database the key will be scoped to. Optional.\n *     - role: The role of the new key\n * @return {Expr}\n */\nfunction CreateKey(params) {\n  arity.exact(1, arguments, CreateKey.name)\n  return new Expr({ create_key: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new user defined function.\n *     - name: The name of the function\n *     - body: A lambda function (escaped with `query`).\n * @return {Expr}\n */\nfunction CreateFunction(params) {\n  arity.exact(1, arguments, CreateFunction.name)\n  return new Expr({ create_function: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new role.\n *     - name: The name of the role\n *     - privileges: An array of privileges\n *     - membership: An array of membership bindings\n * @return {Expr}\n */\nfunction CreateRole(params) {\n  arity.exact(1, arguments, CreateRole.name)\n  return new Expr({ create_role: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new access provider.\n *     - name: A valid schema name\n *     - issuer: A unique string\n *     - jwks_uri: A valid HTTPS URI\n *     - roles: An array of role/predicate pairs where the predicate returns a boolean.\n *                   The array can also contain Role references.\n * @return {Expr}\n */\nfunction CreateAccessProvider(params) {\n  arity.exact(1, arguments, CreateAccessProvider.name)\n  return new Expr({ create_access_provider: wrap(params) })\n}\n\n// Sets\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document for which to retrieve the singleton set.\n * @return {Expr}\n */\nfunction Singleton(ref) {\n  arity.exact(1, arguments, Singleton.name)\n  return new Expr({ singleton: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref or SetRef to retrieve an event set from.\n * @return {Expr}\n */\nfunction Events(ref_set) {\n  arity.exact(1, arguments, Events.name)\n  return new Expr({ events: wrap(ref_set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} index\n *   The Ref of the index to match against.\n * @param {...module:query~ExprArg} terms\n *   A list of terms used in the match.\n * @return {Expr}\n */\nfunction Match(index) {\n  arity.min(1, arguments, Match.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ match: wrap(index), terms: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to union together.\n * @return {Expr}\n */\nfunction Union() {\n  arity.min(1, arguments, Union.name)\n  return new Expr({ union: wrap(varargs(arguments)) })\n}\n\n/**\n * Merge two or more objects..\n *\n * @param {...module:query~ExprArg} merge merge the first object.\n * @param {...module:query~ExprArg} _with the second object or a list of objects\n * @param {...module:query~ExprArg} lambda a lambda to resolve possible conflicts\n * @return {Expr}\n * */\nfunction Merge(merge, _with, lambda) {\n  arity.between(2, 3, arguments, Merge.name)\n  return new Expr(\n    params({ merge: wrap(merge), with: wrap(_with) }, { lambda: wrap(lambda) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to intersect.\n * @return {Expr}\n * */\nfunction Intersection() {\n  arity.min(1, arguments, Intersection.name)\n  return new Expr({ intersection: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to diff.\n * @return {Expr}\n * */\nfunction Difference() {\n  arity.min(1, arguments, Difference.name)\n  return new Expr({ difference: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef to remove duplicates from.\n * @return {Expr}\n * */\nfunction Distinct(set) {\n  arity.exact(1, arguments, Distinct.name)\n  return new Expr({ distinct: wrap(set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} source\n *   A SetRef of the source set\n * @param {module:query~ExprArg|function} target\n *   A Lambda that will accept each element of the source Set and return a Set\n * @return {Expr}\n */\nfunction Join(source, target) {\n  arity.exact(2, arguments, Join.name)\n  return new Expr({ join: wrap(source), with: wrap(target) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/range).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef of the source set\n * @param {module:query~ExprArg} from\n *   The lower bound\n * @param {module:query~ExprArg} to\n *   The upper bound\n * @return {Expr}\n */\nfunction Range(set, from, to) {\n  arity.exact(3, arguments, Range.name)\n  return new Expr({ range: wrap(set), from: wrap(from), to: wrap(to) })\n}\n\n// Authentication\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref with credentials to authenticate against\n * @param {module:query~ExprArg} params\n *   An object of parameters to pass to the login function\n *     - password: The password used to login\n * @return {Expr}\n * */\nfunction Login(ref, params) {\n  arity.exact(2, arguments, Login.name)\n  return new Expr({ login: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} delete_tokens\n *   If true, log out all tokens associated with the current session.\n * @return {Expr}\n */\nfunction Logout(delete_tokens) {\n  arity.exact(1, arguments, Logout.name)\n  return new Expr({ logout: wrap(delete_tokens) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to check the password against.\n * @param {module:query~ExprArg} password\n *   The credentials password to check.\n * @return {Expr}\n */\nfunction Identify(ref, password) {\n  arity.exact(2, arguments, Identify.name)\n  return new Expr({ identify: wrap(ref), password: wrap(password) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction Identity() {\n  arity.exact(0, arguments, Identity.name)\n  return new Expr({ identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentIdentity() {\n  arity.exact(0, arguments, CurrentIdentity.name)\n  return new Expr({ current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasIdentity() {\n  arity.exact(0, arguments, HasIdentity.name)\n  return new Expr({ has_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\n\nfunction HasCurrentIdentity() {\n  arity.exact(0, arguments, HasCurrentIdentity.name)\n  return new Expr({ has_current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentToken() {\n  arity.exact(0, arguments, CurrentToken.name)\n  return new Expr({ current_token: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasCurrentToken() {\n  arity.exact(0, arguments, HasCurrentToken.name)\n  return new Expr({ has_current_token: null })\n}\n\n// String functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} strings - A list of strings to concatenate.\n * @param {string} separator  - The separator to use between each string.\n * @return {string} a single combined string\n */\nfunction Concat(strings, separator) {\n  arity.min(1, arguments, Concat.name)\n  separator = util.defaults(separator, null)\n  return new Expr(\n    params({ concat: wrap(strings) }, { separator: wrap(separator) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} string - The string to casefold.\n * @param {string} normalizer - The algorithm to use. One of: NFKCCaseFold, NFC, NFD, NFKC, NFKD.\n * @return {string} a normalized string\n */\nfunction Casefold(string, normalizer) {\n  arity.min(1, arguments, Casefold.name)\n  return new Expr(\n    params({ casefold: wrap(string) }, { normalizer: wrap(normalizer) })\n  )\n}\n\n/**\n * Returns true if the string contains the given substring, or false if otherwise\n *\n * @param {string} value  - the string to evaluate\n * @param {string} search - the substring to search for\n * @return {boolean}      - was the search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstr\">FaunaDB ContainsStr Function</a>\n */\nfunction ContainsStr(value, search) {\n  arity.exact(2, arguments, ContainsStr.name)\n  return new Expr({ containsstr: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string contains the given pattern, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} pattern - the pattern to search for\n * @return {boolean}       - was the regex search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstrregex\">FaunaDB ContainsStrRegex Function</a>\n */\nfunction ContainsStrRegex(value, pattern) {\n  arity.exact(2, arguments, ContainsStrRegex.name)\n  return new Expr({ containsstrregex: wrap(value), pattern: wrap(pattern) })\n}\n\n/**\n * Returns true if the string starts with the given prefix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the prefix to search for\n * @return {boolean}       - does `value` start with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/startswith\">FaunaDB StartsWith Function</a>\n */\nfunction StartsWith(value, search) {\n  arity.exact(2, arguments, StartsWith.name)\n  return new Expr({ startswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string ends with the given suffix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the suffix to search for\n * @return {boolean}       - does `value` end with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/endswith\">FaunaDB EndsWith Function</a>\n */\nfunction EndsWith(value, search) {\n  arity.exact(2, arguments, EndsWith.name)\n  return new Expr({ endswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * It takes a string and returns a regex which matches the input string verbatim.\n *\n * @param value      - the string to analyze\n * @return {string}  - a regex which matches the input string verbatim\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/regexescape\">FaunaDB RegexEscape Function</a>\n */\nfunction RegexEscape(value) {\n  arity.exact(1, arguments, RegexEscape.name)\n  return new Expr({ regexescape: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - Find the first position of this string in the search string\n * @param {int} start - An optional start offset into the search string\n * @return {int} location of the found string or -1 if not found\n */\nfunction FindStr(value, find, start) {\n  arity.between(2, 3, arguments, FindStr.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params({ findstr: wrap(value), find: wrap(find) }, { start: wrap(start) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - Find the first position of this pattern in the search string using a java regular expression syntax\n * @param {int} start - An optional start offset into the search string\n * @param {int} numResults - An optional number of results to return, max 1024\n * @return {Array} an array of object describing where the search pattern was located\n */\nfunction FindStrRegex(value, pattern, start, numResults) {\n  arity.between(2, 4, arguments, FindStrRegex.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params(\n      { findstrregex: wrap(value), pattern: wrap(pattern) },\n      { start: wrap(start), num_results: wrap(numResults) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to calculate the length in codepoints.\n * @return {int} the length of the string in codepoints\n */\nfunction Length(value) {\n  arity.exact(1, arguments, Length.name)\n  return new Expr({ length: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to LowerCase.\n * @return {string} the string converted to lowercase\n */\nfunction LowerCase(value) {\n  arity.exact(1, arguments, LowerCase.name)\n  return new Expr({ lowercase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to trim leading white space.\n * @return {string} the string with leading white space removed\n */\nfunction LTrim(value) {\n  arity.exact(1, arguments, LTrim.name)\n  return new Expr({ ltrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {module:query~ExprArg} terms\n *   A document from which to produce ngrams.\n * @param {?Object} opts\n *   An object of options\n *     - min: The minimum ngram size.\n *     - max: The maximum ngram size.\n * @return {Array|Value}\n */\nfunction NGram(terms, min, max) {\n  arity.between(1, 3, arguments, NGram.name)\n  min = util.defaults(min, null)\n  max = util.defaults(max, null)\n\n  return new Expr(\n    params({ ngram: wrap(terms) }, { min: wrap(min), max: wrap(max) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to repeat.\n * @param {int} number - The number of times to repeat the string\n * @return {string} a string which was repeated\n */\nfunction Repeat(value, number) {\n  arity.between(1, 2, arguments, Repeat.name)\n  number = util.defaults(number, null)\n  return new Expr(params({ repeat: wrap(value) }, { number: wrap(number) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - The string to find in the search string\n * @param {string} replace - The string to replace in the search string\n * @return {String} all the occurrences of find substituted with replace string\n */\nfunction ReplaceStr(value, find, replace) {\n  arity.exact(3, arguments, ReplaceStr.name)\n  return new Expr({\n    replacestr: wrap(value),\n    find: wrap(find),\n    replace: wrap(replace),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - The pattern to find in the search string using a java regular expression syntax\n * @param {string} replace - The string to replace in the search string\n * @param {boolean} first - Replace all or just the first\n * @return {string} all the occurrences of find pattern substituted with replace string\n */\nfunction ReplaceStrRegex(value, pattern, replace, first) {\n  arity.between(3, 4, arguments, ReplaceStrRegex.name)\n  first = util.defaults(first, null)\n  return new Expr(\n    params(\n      {\n        replacestrregex: wrap(value),\n        pattern: wrap(pattern),\n        replace: wrap(replace),\n      },\n      { first: wrap(first) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to remove white space from the end.\n * @return {string} the string with trailing whitespaces removed\n */\nfunction RTrim(value) {\n  arity.exact(1, arguments, RTrim.name)\n  return new Expr({ rtrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {int} num - The string of N Space(s).\n * @return {string} a string with spaces\n */\nfunction Space(num) {\n  arity.exact(1, arguments, Space.name)\n  return new Expr({ space: wrap(num) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value  The string to SubString.\n * @param {int} start  The position the first character of the return string begins at\n * @param {int} length  An optional length, if omitted then returns to the end of string\n * @return {string}\n */\nfunction SubString(value, start, length) {\n  arity.between(1, 3, arguments, SubString.name)\n  start = util.defaults(start, null)\n  length = util.defaults(length, null)\n  return new Expr(\n    params(\n      { substring: wrap(value) },\n      { start: wrap(start), length: wrap(length) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to TitleCase.\n * @return {string}  A string converted to titlecase\n */\nfunction TitleCase(value) {\n  arity.exact(1, arguments, TitleCase.name)\n  return new Expr({ titlecase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Trim.\n * @return {string} a string with leading and trailing whitespace removed\n */\nfunction Trim(value) {\n  arity.exact(1, arguments, Trim.name)\n  return new Expr({ trim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Uppercase.\n * @return {string} An uppercase string\n */\nfunction UpperCase(value) {\n  arity.exact(1, arguments, UpperCase.name)\n  return new Expr({ uppercase: wrap(value) })\n}\n\n/**\n * Format values into a string.\n *\n * @param  {string}  string string with format specifiers\n * @param  {array}   values list of values to format\n * @return {string}         a string\n */\nfunction Format(string) {\n  arity.min(1, arguments, Format.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ format: wrap(string), values: wrap(varargs(args)) })\n}\n\n// Time and date functions\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to converted to a time object.\n * @return {Expr}\n */\nfunction Time(string) {\n  arity.exact(1, arguments, Time.name)\n  return new Expr({ time: wrap(string) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} number\n *   The number of `unit`s from Epoch\n * @param {module:query~ExprArg} unit\n *   The unit of `number`. One of second, millisecond, microsecond, nanosecond.\n * @return {Expr}\n */\nfunction Epoch(number, unit) {\n  arity.exact(2, arguments, Epoch.name)\n  return new Expr({ epoch: wrap(number), unit: wrap(unit) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timeadd).\n *\n * Returns a new time or date with the offset in terms of the unit\n * added.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeAdd(base, offset, unit) {\n  arity.exact(3, arguments, TimeAdd.name)\n  return new Expr({\n    time_add: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timesubtract).\n *\n * Returns a new time or date with the offset in terms of the unit\n * subtracted.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeSubtract(base, offset, unit) {\n  arity.exact(3, arguments, TimeSubtract.name)\n  return new Expr({\n    time_subtract: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timediff).\n *\n * Returns the number of intervals in terms of the unit between\n * two times or dates. Both start and finish must be of the same\n * type.\n *\n * @param start the starting time or date, inclusive\n * @param finish the ending time or date, exclusive\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeDiff(start, finish, unit) {\n  arity.exact(3, arguments, TimeDiff.name)\n  return new Expr({\n    time_diff: wrap(start),\n    other: wrap(finish),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to convert to a Date object\n * @return {Expr}\n */\nfunction Date(string) {\n  arity.exact(1, arguments, Date.name)\n  return new Expr({ date: wrap(string) })\n}\n\n/**\n * Returns the current snapshot time.\n *\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/now\">Now function</a>\n */\nfunction Now() {\n  arity.exact(0, arguments, Now.name)\n  return new Expr({ now: wrap(null) })\n}\n\n// Miscellaneous functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @deprecated use NewId instead\n * @return {Expr}\n */\nfunction NextId() {\n  arity.exact(0, arguments, NextId.name)\n  return new Expr({ next_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @return {Expr}\n */\nfunction NewId() {\n  arity.exact(0, arguments, NewId.name)\n  return new Expr({ new_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the database.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database's scope.\n * @return {Expr}\n */\nfunction Database(name, scope) {\n  arity.between(1, 2, arguments, Database.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ database: wrap(name) })\n    case 2:\n      return new Expr({ database: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the index.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index's scope.\n * @return {Expr}\n */\nfunction Index(name, scope) {\n  arity.between(1, 2, arguments, Index.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ index: wrap(name) })\n    case 2:\n      return new Expr({ index: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the class.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class's scope.\n * @return {Expr}\n *\n * @deprecated Class is deprecated, use Collection instead\n */\nfunction Class(name, scope) {\n  arity.between(1, 2, arguments, Class.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ class: wrap(name) })\n    case 2:\n      return new Expr({ class: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the collection.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection's scope.\n * @return {Expr}\n */\nfunction Collection(name, scope) {\n  arity.between(1, 2, arguments, Collection.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ collection: wrap(name) })\n    case 2:\n      return new Expr({ collection: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the user defined function.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function's scope.\n * @return {Expr}\n */\nfunction FunctionFn(name, scope) {\n  arity.between(1, 2, arguments, FunctionFn.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ function: wrap(name) })\n    case 2:\n      return new Expr({ function: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the role.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role's scope.\n * @return {Expr}\n */\nfunction Role(name, scope) {\n  arity.between(1, 2, arguments, Role.name)\n  scope = util.defaults(scope, null)\n  return new Expr(params({ role: wrap(name) }, { scope: wrap(scope) }))\n}\n\n/**\n *\n * @param {module:query~ExprArg} scope\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction AccessProviders(scope) {\n  arity.max(1, arguments, AccessProviders.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ access_providers: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `classes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class set's scope.\n * @return {Expr}\n */\nfunction Classes(scope) {\n  arity.max(1, arguments, Classes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ classes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `collections` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection set's scope.\n * @return {Expr}\n */\nfunction Collections(scope) {\n  arity.max(1, arguments, Collections.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ collections: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `databases` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction Databases(scope) {\n  arity.max(1, arguments, Databases.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ databases: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs an `indexes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index set's scope.\n * @return {Expr}\n */\nfunction Indexes(scope) {\n  arity.max(1, arguments, Indexes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ indexes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `functions` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function set's scope.\n * @return {Expr}\n */\nfunction Functions(scope) {\n  arity.max(1, arguments, Functions.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ functions: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `roles` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role set's scope.\n * @return {Expr}\n */\nfunction Roles(scope) {\n  arity.max(1, arguments, Roles.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ roles: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `keys` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the key set's scope.\n * @return {Expr}\n */\nfunction Keys(scope) {\n  arity.max(1, arguments, Keys.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ keys: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `tokens` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the token set's scope.\n * @return {Expr}\n */\nfunction Tokens(scope) {\n  arity.max(1, arguments, Tokens.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ tokens: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `credentials` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the credential set's scope.\n * @return {Expr}\n */\nfunction Credentials(scope) {\n  arity.max(1, arguments, Credentials.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ credentials: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of expressions to check for equivalence.\n * @return {Expr}\n */\nfunction Equals() {\n  arity.min(1, arguments, Equals.name)\n  return new Expr({ equals: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n *\n * @deprecated use ContainsPath instead\n */\nfunction Contains(path, _in) {\n  arity.exact(2, arguments, Contains.name)\n  return new Expr({ contains: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} value\n *   Represent the value we want to search for.\n * @param {module:query~ExprArg} in\n *   An object we will search for the value passed in.\n * @return {Expr}\n */\nfunction ContainsValue(value, _in) {\n  arity.exact(2, arguments, ContainsValue.name)\n  return new Expr({ contains_value: wrap(value), in: wrap(_in) })\n}\n\n/**\n * @param {string} field\n *   A field name we want to confirm exists.\n * @param {module:query~ExprArg} obj\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsField(field, obj) {\n  arity.exact(2, arguments, ContainsField.name)\n  return new Expr({ contains_field: wrap(field), in: wrap(obj) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsPath(path, _in) {\n  arity.exact(2, arguments, ContainsPath.name)\n  return new Expr({ contains_path: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @param {?module:query~ExprArg} default\n *   A default value if the path does not exist.\n * @return {Expr}\n */\nfunction Select(path, from, _default) {\n  arity.between(2, 3, arguments, Select.name)\n  var exprObj = { select: wrap(path), from: wrap(from) }\n  if (_default !== undefined) {\n    exprObj.default = wrap(_default)\n  }\n  return new Expr(exprObj)\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @return {Expr}\n *\n * @deprecated avoid using\n */\nfunction SelectAll(path, from) {\n  arity.exact(2, arguments, SelectAll.name)\n  return new Expr({ select_all: wrap(path), from: wrap(from) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the absolute value.\n * @return {Expr}\n */\nfunction Abs(expr) {\n  arity.exact(1, arguments, Abs.name)\n  return new Expr({ abs: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to sum together.\n * @return {Expr}\n */\nfunction Add() {\n  arity.min(1, arguments, Add.name)\n  return new Expr({ add: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise and together.\n * @return {Expr}\n */\nfunction BitAnd() {\n  arity.min(1, arguments, BitAnd.name)\n  return new Expr({ bitand: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the bitwise not.\n * @return {Expr}\n */\nfunction BitNot(expr) {\n  arity.exact(1, arguments, BitNot.name)\n  return new Expr({ bitnot: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Or'd together.\n * @return {Expr}\n */\nfunction BitOr() {\n  arity.min(1, arguments, BitOr.name)\n  return new Expr({ bitor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Xor'd together.\n * @return {Expr}\n */\nfunction BitXor() {\n  arity.min(1, arguments, BitXor.name)\n  return new Expr({ bitxor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The least integer that is greater than or equal to the number\n * @return {Expr}\n */\nfunction Ceil(expr) {\n  arity.exact(1, arguments, Ceil.name)\n  return new Expr({ ceil: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of.\n * @return {Expr}\n */\nfunction Divide() {\n  arity.min(1, arguments, Divide.name)\n  return new Expr({ divide: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The greatest integer that is less than or equal to the number\n * @return {Expr}\n */\nfunction Floor(expr) {\n  arity.exact(1, arguments, Floor.name)\n  return new Expr({ floor: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Max() {\n  arity.min(1, arguments, Max.name)\n  return new Expr({ max: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Min() {\n  arity.min(1, arguments, Min.name)\n  return new Expr({ min: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of. The remainder will be returned.\n * @return {Expr}\n */\nfunction Modulo() {\n  arity.min(1, arguments, Modulo.name)\n  return new Expr({ modulo: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Multiply() {\n  arity.min(1, arguments, Multiply.name)\n  return new Expr({ multiply: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to round.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Round(value, precision) {\n  arity.min(1, arguments, Round.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ round: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the difference of.\n * @return {Expr}\n */\nfunction Subtract() {\n  arity.min(1, arguments, Subtract.name)\n  return new Expr({ subtract: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sign of the number is returned as positive 1, zero 0 , negative -1\n * @return {Expr}\n */\nfunction Sign(expr) {\n  arity.exact(1, arguments, Sign.name)\n  return new Expr({ sign: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The square root of the number\n * @return {Expr}\n */\nfunction Sqrt(expr) {\n  arity.exact(1, arguments, Sqrt.name)\n  return new Expr({ sqrt: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to truncate.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Trunc(value, precision) {\n  arity.min(1, arguments, Trunc.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ trunc: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n *\n * Count the number of elements in the collection.\n *\n * @param {array}    - array of items\n * @return {integer} - number of items in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/count\">Count function</a>\n */\nfunction Count(collection) {\n  arity.exact(1, arguments, Count.name)\n  return new Expr({ count: wrap(collection) })\n}\n\n/**\n *\n * Sum the elements in the collection.\n *\n * @param {array} - collection of numbers\n * @return {integer} - total of all numbers in collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/sum\">Sum function</a>\n */\nfunction Sum(collection) {\n  arity.exact(1, arguments, Sum.name)\n  return new Expr({ sum: wrap(collection) })\n}\n\n/**\n *\n * Returns the mean of all elements in the collection.\n *\n * @param {array} - collection the numbers\n * @return {float} - the mean of all numbers in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/mean\">Mean function</a>\n */\nfunction Mean(collection) {\n  arity.exact(1, arguments, Mean.name)\n  return new Expr({ mean: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if any element of the collection is true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/any\">Any function</a>\n */\nfunction Any(collection) {\n  arity.exact(1, arguments, Any.name)\n  return new Expr({ any: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if all elements of the collection are true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/all\">All function</a>\n */\nfunction All(collection) {\n  arity.exact(1, arguments, All.name)\n  return new Expr({ all: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc cosine of the number\n * @return {Expr}\n */\nfunction Acos(expr) {\n  arity.exact(1, arguments, Acos.name)\n  return new Expr({ acos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc sine of the number\n * @return {Expr}\n */\nfunction Asin(expr) {\n  arity.exact(1, arguments, Asin.name)\n  return new Expr({ asin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc tangent of the number\n * @return {Expr}\n */\nfunction Atan(expr) {\n  arity.exact(1, arguments, Atan.name)\n  return new Expr({ atan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The cosine of a number\n * @return {Expr}\n */\nfunction Cos(expr) {\n  arity.exact(1, arguments, Cos.name)\n  return new Expr({ cos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic cosine of the number\n * @return {Expr}\n */\nfunction Cosh(expr) {\n  arity.exact(1, arguments, Cosh.name)\n  return new Expr({ cosh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take radians and convert it to degrees 360 degrees = 2 * pi radians\n * @return {Expr}\n */\nfunction Degrees(expr) {\n  arity.exact(1, arguments, Degrees.name)\n  return new Expr({ degrees: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The e raised to an exponent number\n * @return {Expr}\n */\nfunction Exp(expr) {\n  arity.exact(1, arguments, Exp.name)\n  return new Expr({ exp: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A side of the right triangle\n * @param {...module:query~ExprArg} terms\n *   The second side of a right triange, defaults to the first side\n * @return {Expr}\n */\nfunction Hypot(value, side) {\n  arity.min(1, arguments, Hypot.name)\n  side = util.defaults(side, null)\n  return new Expr(params({ hypot: wrap(value) }, { b: wrap(side) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The natural log of the number\n * @return {Expr}\n */\nfunction Ln(expr) {\n  arity.exact(1, arguments, Ln.name)\n  return new Expr({ ln: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The log base 10 of a number\n * @return {Expr}\n */\nfunction Log(expr) {\n  arity.exact(1, arguments, Log.name)\n  return new Expr({ log: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to raise to the power.\n * @param {...module:query~ExprArg} terms\n *   An optional exponent\n * @return {Expr}\n */\nfunction Pow(value, exponent) {\n  arity.min(1, arguments, Pow.name)\n  exponent = util.defaults(exponent, null)\n  return new Expr(params({ pow: wrap(value) }, { exp: wrap(exponent) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take degrees and convert the number to radians 2 * pi = 360 degrees\n * @return {Expr}\n */\nfunction Radians(expr) {\n  arity.exact(1, arguments, Radians.name)\n  return new Expr({ radians: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sine of a number\n * @return {Expr}\n */\nfunction Sin(expr) {\n  arity.exact(1, arguments, Sin.name)\n  return new Expr({ sin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic sine of a number\n * @return {Expr}\n */\nfunction Sinh(expr) {\n  arity.exact(1, arguments, Sinh.name)\n  return new Expr({ sinh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The Tangent of a number\n * @return {Expr}\n */\nfunction Tan(expr) {\n  arity.exact(1, arguments, Tan.name)\n  return new Expr({ tan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyberbolic tangent of a number\n * @return {Expr}\n */\nfunction Tanh(expr) {\n  arity.exact(1, arguments, Tanh.name)\n  return new Expr({ tanh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LT() {\n  arity.min(1, arguments, LT.name)\n  return new Expr({ lt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LTE() {\n  arity.min(1, arguments, LTE.name)\n  return new Expr({ lte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GT() {\n  arity.min(1, arguments, GT.name)\n  return new Expr({ gt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GTE() {\n  arity.min(1, arguments, GTE.name)\n  return new Expr({ gte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the conjunction of.\n * @return {Expr}\n */\nfunction And() {\n  arity.min(1, arguments, And.name)\n  return new Expr({ and: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the disjunction of.\n * @return {Expr}\n */\nfunction Or() {\n  arity.min(1, arguments, Or.name)\n  return new Expr({ or: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {module:query~ExprArg} boolean\n *   A boolean to produce the negation of.\n * @return {Expr}\n */\nfunction Not(boolean) {\n  arity.exact(1, arguments, Not.name)\n  return new Expr({ not: wrap(boolean) })\n}\n\n/**\n * Converts an expression to a string literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a string.\n * @return {Expr}\n */\nfunction ToString(expr) {\n  arity.exact(1, arguments, ToString.name)\n  return new Expr({ to_string: wrap(expr) })\n}\n\n/**\n * Converts an expression to a number literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a number.\n * @return {Expr}\n */\nfunction ToNumber(expr) {\n  arity.exact(1, arguments, ToNumber.name)\n  return new Expr({ to_number: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Object.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Object.\n * @return {Expr}\n */\nfunction ToObject(expr) {\n  arity.exact(1, arguments, ToObject.name)\n  return new Expr({ to_object: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Array.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Array.\n * @return {Expr}\n */\nfunction ToArray(expr) {\n  arity.exact(1, arguments, ToArray.name)\n  return new Expr({ to_array: wrap(expr) })\n}\n\n/**\n * Converts an expression to a double value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a double.\n * @return {Expr}\n */\nfunction ToDouble(expr) {\n  arity.exact(1, arguments, ToDouble.name)\n  return new Expr({ to_double: wrap(expr) })\n}\n\n/**\n * Converts an expression to an integer value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an integer.\n * @return {Expr}\n */\nfunction ToInteger(expr) {\n  arity.exact(1, arguments, ToInteger.name)\n  return new Expr({ to_integer: wrap(expr) })\n}\n\n/**\n * Converts an expression to a time literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a time.\n * @return {Expr}\n */\nfunction ToTime(expr) {\n  arity.exact(1, arguments, ToTime.name)\n  return new Expr({ to_time: wrap(expr) })\n}\n\n/**\n * Converts an expression evaluating to a time to seconds since epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to seconds numeric value.\n * @return {Expr}\n */\nfunction ToSeconds(expr) {\n  arity.exact(1, arguments, ToSeconds.name)\n  return new Expr({ to_seconds: wrap(expr) })\n}\n\n/**\n * Converts a time expression to milliseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to millisecond numeric value.\n * @return {Expr}\n */\nfunction ToMillis(expr) {\n  arity.exact(1, arguments, ToMillis.name)\n  return new Expr({ to_millis: wrap(expr) })\n}\n\n/**\n * Converts a time expression to microseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to microsecond numeric value.\n * @return {Expr}\n */\nfunction ToMicros(expr) {\n  arity.exact(1, arguments, ToMicros.name)\n  return new Expr({ to_micros: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the week following ISO-8601 convention, from 1 (Monday) to 7 (Sunday).\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of week.\n * @return {Expr}\n */\nfunction DayOfWeek(expr) {\n  arity.exact(1, arguments, DayOfWeek.name)\n  return new Expr({ day_of_week: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the year, from 1 to 365, or 366 in a leap year.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of year.\n * @return {Expr}\n */\nfunction DayOfYear(expr) {\n  arity.exact(1, arguments, DayOfYear.name)\n  return new Expr({ day_of_year: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the month, from 1 to 31.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of month.\n * @return {Expr}\n */\nfunction DayOfMonth(expr) {\n  arity.exact(1, arguments, DayOfMonth.name)\n  return new Expr({ day_of_month: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a hour.\n * @return {Expr}\n */\nfunction Hour(expr) {\n  arity.exact(1, arguments, Hour.name)\n  return new Expr({ hour: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Minute(expr) {\n  arity.exact(1, arguments, Minute.name)\n  return new Expr({ minute: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Second(expr) {\n  arity.exact(1, arguments, Second.name)\n  return new Expr({ second: wrap(expr) })\n}\n\n/**\n * Returns a time expression's month of the year, from 1 to 12.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Month(expr) {\n  arity.exact(1, arguments, Month.name)\n  return new Expr({ month: wrap(expr) })\n}\n\n/**\n * Returns the time expression's year, following the ISO-8601 standard.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a year.\n * @return {Expr}\n */\nfunction Year(expr) {\n  arity.exact(1, arguments, Year.name)\n  return new Expr({ year: wrap(expr) })\n}\n\n/**\n * Converts an expression to a date literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a date.\n * @return {Expr}\n */\nfunction ToDate(expr) {\n  arity.exact(1, arguments, ToDate.name)\n  return new Expr({ to_date: wrap(expr) })\n}\n\n/**\n * Move database to a new hierarchy.\n *\n * @param {string}  from database reference to be moved.\n * @param {string}  to new parent database reference.\n * @return {Expr}   The expression wrapping the provided object.\n * @see <a href=\"https://app.fauna.com/documentation/reference/queryapi#write-functions\">FaunaDB Write Functions</a>\n */\nfunction MoveDatabase(from, to) {\n  arity.exact(2, arguments, MoveDatabase.name)\n  return new Expr({ move_database: wrap(from), to: wrap(to) })\n}\n\n/**\n * Returns a set of all documents in the given collection.\n * A set must be paginated in order to retrieve its values.\n *\n * @param collection a reference to the collection. Type: Ref\n * @return a new {@link Expr} instance\n * @see #Paginate(Expr)\n */\nfunction Documents(collection) {\n  arity.exact(1, arguments, Documents.name)\n  return new Expr({ documents: wrap(collection) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} expr\n *  An expression (i.e. Set, Page, or Array) to reverse\n * @return {Expr}\n */\nfunction Reverse(expr) {\n  arity.exact(1, arguments, Reverse.name)\n  return new Expr({ reverse: wrap(expr) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} name\n * A string representing an AccessProvider's name\n * @return {Expr}\n */\nfunction AccessProvider(name) {\n  arity.exact(1, arguments, AccessProvider.name)\n  return new Expr({ access_provider: wrap(name) })\n}\n\n// Helpers\n\n/**\n * @ignore\n */\nfunction arity(min, max, args, callerFunc) {\n  if (\n    (min !== null && args.length < min) ||\n    (max !== null && args.length > max)\n  ) {\n    throw new errors.InvalidArity(min, max, args.length, callerFunc)\n  }\n\n  if (min !== null) {\n    for (let i = 0; i < min; i++) {\n      if (args[i] === undefined) {\n        throw new errors.InvalidValue(\n          `Expected value, but found 'undefined'. Argument ${i} for ${callerFunc} is required.`\n        )\n      }\n    }\n  }\n}\n\narity.exact = function(n, args, callerFunc) {\n  arity(n, n, args, callerFunc)\n}\narity.max = function(n, args, callerFunc) {\n  arity(null, n, args, callerFunc)\n}\narity.min = function(n, args, callerFunc) {\n  arity(n, null, args, callerFunc)\n}\narity.between = function(min, max, args, callerFunc) {\n  arity(min, max, args, callerFunc)\n}\n\n/** Adds optional parameters to the query.\n *\n * @ignore\n * */\nfunction params(mainParams, optionalParams) {\n  for (var key in optionalParams) {\n    var val = optionalParams[key]\n    if (val !== null && val !== undefined) {\n      mainParams[key] = val\n    }\n  }\n  return mainParams\n}\n\n/**\n * Called on rest arguments.\n * This ensures that a single value passed is not put in an array, so\n * `query.add([1, 2])` will work as well as `query.add(1, 2)`.\n *\n * @ignore\n */\nfunction varargs(values) {\n  var valuesAsArr = Array.isArray(values)\n    ? values\n    : Array.prototype.slice.call(values)\n  return values.length === 1 ? values[0] : valuesAsArr\n}\n\n/**\n * @ignore\n */\nfunction argsToArray(args) {\n  var rv = []\n  rv.push.apply(rv, args)\n  return rv\n}\n\n/**\n * Wraps an object as an Expression. This will automatically wrap any bare objects with\n * the appropriate {@link object} escaping.\n * @param {Object} obj\n *  The object to be wrapped as an Expression.\n * @returns {Expr}\n *   The expression wrapping the provided object.\n * @private\n */\nfunction wrap(obj) {\n  // the arity functions throw when provided undefined arguments\n  // but wrap can accept undefined values. It still should be given\n  // exactly one argument, even if it is undefined.\n  if (arguments.length !== 1) {\n    throw new errors.InvalidArity(1, 1, arguments.length, wrap.name)\n  }\n  if (obj === undefined || obj === null) {\n    return obj\n  } else if (\n    obj instanceof Expr ||\n    util.checkInstanceHasProperty(obj, '_isFaunaExpr')\n  ) {\n    return obj\n  } else if (typeof obj === 'symbol') {\n    return obj.toString().replace(/Symbol\\((.*)\\)/, function(str, symbol) {\n      return symbol\n    })\n  } else if (typeof obj === 'function') {\n    return Lambda(obj)\n  } else if (Array.isArray(obj)) {\n    return new Expr(\n      obj.map(function(elem) {\n        return wrap(elem)\n      })\n    )\n  } else if (obj instanceof Uint8Array || obj instanceof ArrayBuffer) {\n    return new values.Bytes(obj)\n  } else if (typeof obj === 'object') {\n    return new Expr({ object: wrapValues(obj) })\n  } else {\n    return obj\n  }\n}\n\n/**\n * Wraps all of the values of a provided Object, while leaving the parent object unwrapped.\n * @param {Object} obj\n *  The object whose values are to be wrapped as Expressions.\n * @returns {Object}\n *  A copy of the provided object, with the values wrapped as Expressions.\n * @private\n */\nfunction wrapValues(obj) {\n  if (obj !== null) {\n    var rv = {}\n\n    Object.keys(obj).forEach(function(key) {\n      rv[key] = wrap(obj[key])\n    })\n\n    return rv\n  } else {\n    return null\n  }\n}\n\nmodule.exports = {\n  Ref: Ref,\n  Bytes: Bytes,\n  Abort: Abort,\n  At: At,\n  Let: Let,\n  Var: Var,\n  If: If,\n  Do: Do,\n  Object: objectFunction,\n  Lambda: Lambda,\n  Call: Call,\n  Query: Query,\n  Map: Map,\n  Foreach: Foreach,\n  Filter: Filter,\n  Take: Take,\n  Drop: Drop,\n  Prepend: Prepend,\n  Append: Append,\n  IsEmpty: IsEmpty,\n  IsNonEmpty: IsNonEmpty,\n  IsNumber: IsNumber,\n  IsDouble: IsDouble,\n  IsInteger: IsInteger,\n  IsBoolean: IsBoolean,\n  IsNull: IsNull,\n  IsBytes: IsBytes,\n  IsTimestamp: IsTimestamp,\n  IsDate: IsDate,\n  IsString: IsString,\n  IsArray: IsArray,\n  IsObject: IsObject,\n  IsRef: IsRef,\n  IsSet: IsSet,\n  IsDoc: IsDoc,\n  IsLambda: IsLambda,\n  IsCollection: IsCollection,\n  IsDatabase: IsDatabase,\n  IsIndex: IsIndex,\n  IsFunction: IsFunction,\n  IsKey: IsKey,\n  IsToken: IsToken,\n  IsCredentials: IsCredentials,\n  IsRole: IsRole,\n  Get: Get,\n  KeyFromSecret: KeyFromSecret,\n  Reduce: Reduce,\n  Paginate: Paginate,\n  Exists: Exists,\n  Create: Create,\n  Update: Update,\n  Replace: Replace,\n  Delete: Delete,\n  Insert: Insert,\n  Remove: Remove,\n  CreateClass: deprecate(\n    CreateClass,\n    'CreateClass() is deprecated, use CreateCollection() instead'\n  ),\n  CreateCollection: CreateCollection,\n  CreateDatabase: CreateDatabase,\n  CreateIndex: CreateIndex,\n  CreateKey: CreateKey,\n  CreateFunction: CreateFunction,\n  CreateRole: CreateRole,\n  CreateAccessProvider: CreateAccessProvider,\n  Singleton: Singleton,\n  Events: Events,\n  Match: Match,\n  Union: Union,\n  Merge: Merge,\n  Intersection: Intersection,\n  Difference: Difference,\n  Distinct: Distinct,\n  Join: Join,\n  Range: Range,\n  Login: Login,\n  Logout: Logout,\n  Identify: Identify,\n  Identity: deprecate(\n    Identity,\n    'Identity() is deprecated, use CurrentIdentity() instead'\n  ),\n  CurrentIdentity: CurrentIdentity,\n  HasIdentity: deprecate(\n    HasIdentity,\n    'HasIdentity() is deprecated, use HasCurrentIdentity() instead'\n  ),\n  HasCurrentIdentity: HasCurrentIdentity,\n  CurrentToken: CurrentToken,\n  HasCurrentToken: HasCurrentToken,\n  Concat: Concat,\n  Casefold: Casefold,\n  ContainsStr: ContainsStr,\n  ContainsStrRegex: ContainsStrRegex,\n  StartsWith: StartsWith,\n  EndsWith: EndsWith,\n  FindStr: FindStr,\n  FindStrRegex: FindStrRegex,\n  Length: Length,\n  LowerCase: LowerCase,\n  LTrim: LTrim,\n  NGram: NGram,\n  Repeat: Repeat,\n  ReplaceStr: ReplaceStr,\n  ReplaceStrRegex: ReplaceStrRegex,\n  RegexEscape: RegexEscape,\n  RTrim: RTrim,\n  Space: Space,\n  SubString: SubString,\n  TitleCase: TitleCase,\n  Trim: Trim,\n  UpperCase: UpperCase,\n  Format: Format,\n  Time: Time,\n  TimeAdd: TimeAdd,\n  TimeSubtract: TimeSubtract,\n  TimeDiff: TimeDiff,\n  Epoch: Epoch,\n  Date: Date,\n  Now: Now,\n  NextId: deprecate(NextId, 'NextId() is deprecated, use NewId() instead'),\n  NewId: NewId,\n  Database: Database,\n  Index: Index,\n  Class: deprecate(Class, 'Class() is deprecated, use Collection() instead'),\n  Collection: Collection,\n  Function: FunctionFn,\n  Role: Role,\n  AccessProviders: AccessProviders,\n  Classes: deprecate(\n    Classes,\n    'Classes() is deprecated, use Collections() instead'\n  ),\n  Collections: Collections,\n  Databases: Databases,\n  Indexes: Indexes,\n  Functions: Functions,\n  Roles: Roles,\n  Keys: Keys,\n  Tokens: Tokens,\n  Credentials: Credentials,\n  Equals: Equals,\n  Contains: deprecate(\n    Contains,\n    'Contains() is deprecated, use ContainsPath() instead'\n  ),\n  ContainsPath: ContainsPath,\n  ContainsField: ContainsField,\n  ContainsValue: ContainsValue,\n  Select: Select,\n  SelectAll: deprecate(SelectAll, 'SelectAll() is deprecated. Avoid use.'),\n  Abs: Abs,\n  Add: Add,\n  BitAnd: BitAnd,\n  BitNot: BitNot,\n  BitOr: BitOr,\n  BitXor: BitXor,\n  Ceil: Ceil,\n  Divide: Divide,\n  Floor: Floor,\n  Max: Max,\n  Min: Min,\n  Modulo: Modulo,\n  Multiply: Multiply,\n  Round: Round,\n  Subtract: Subtract,\n  Sign: Sign,\n  Sqrt: Sqrt,\n  Trunc: Trunc,\n  Count: Count,\n  Sum: Sum,\n  Mean: Mean,\n  Any: Any,\n  All: All,\n  Acos: Acos,\n  Asin: Asin,\n  Atan: Atan,\n  Cos: Cos,\n  Cosh: Cosh,\n  Degrees: Degrees,\n  Exp: Exp,\n  Hypot: Hypot,\n  Ln: Ln,\n  Log: Log,\n  Pow: Pow,\n  Radians: Radians,\n  Sin: Sin,\n  Sinh: Sinh,\n  Tan: Tan,\n  Tanh: Tanh,\n  LT: LT,\n  LTE: LTE,\n  GT: GT,\n  GTE: GTE,\n  And: And,\n  Or: Or,\n  Not: Not,\n  ToString: ToString,\n  ToNumber: ToNumber,\n  ToObject: ToObject,\n  ToArray: ToArray,\n  ToDouble: ToDouble,\n  ToInteger: ToInteger,\n  ToTime: ToTime,\n  ToSeconds: ToSeconds,\n  ToMicros: ToMicros,\n  ToMillis: ToMillis,\n  DayOfMonth: DayOfMonth,\n  DayOfWeek: DayOfWeek,\n  DayOfYear: DayOfYear,\n  Second: Second,\n  Minute: Minute,\n  Hour: Hour,\n  Month: Month,\n  Year: Year,\n  ToDate: ToDate,\n  MoveDatabase: MoveDatabase,\n  Documents: Documents,\n  Reverse: Reverse,\n  AccessProvider: AccessProvider,\n  arity: arity,\n  wrap: wrap,\n}\n", "'use strict'\n\nvar values = require('./values')\n\nfunction toJSON(object, pretty) {\n  pretty = typeof pretty !== 'undefined' ? pretty : false\n\n  if (pretty) {\n    return JSON.stringify(object, null, '  ')\n  } else {\n    return JSON.stringify(object)\n  }\n}\n\nfunction parseJSON(json) {\n  return JSON.parse(json, json_parse)\n}\n\n/*\n * Parses a line-separated JSON stream. For backwards compatibility with\n * concatenated JSON objects, it attempts to parse the received content as a\n * JSON object. Failures should occur when partial or multiple line-separated\n * JSON objects are received. Upon a parsing failure, attempt paring the\n * received content as line-separated JSON objects.\n *\n * See https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON\n * See https://en.wikipedia.org/wiki/JSON_streaming#Concatenated_JSON\n *\n * @private\n */\nfunction parseJSONStreaming(content) {\n  var values = []\n\n  try {\n    values.push(parseJSON(content))\n    content = '' // whole content parsed\n  } catch (err) {\n    while (true) {\n      var pos = content.indexOf('\\n') + 1 // include \\n\n      if (pos <= 0) {\n        break\n      }\n      var slice = content.slice(0, pos).trim()\n      if (slice.length > 0) {\n        // discards empty slices due to leading \\n\n        values.push(parseJSON(slice))\n      }\n      content = content.slice(pos)\n    }\n  }\n\n  return {\n    values: values,\n    buffer: content,\n  }\n}\n\nfunction json_parse(_, val) {\n  if (typeof val !== 'object' || val === null) {\n    return val\n  } else if ('@ref' in val) {\n    var ref = val['@ref']\n\n    if (!('collection' in ref) && !('database' in ref)) {\n      return values.Native.fromName(ref['id'])\n    }\n\n    var col = json_parse('collection', ref['collection'])\n    var db = json_parse('database', ref['database'])\n\n    return new values.Ref(ref['id'], col, db)\n  } else if ('@obj' in val) {\n    return val['@obj']\n  } else if ('@set' in val) {\n    return new values.SetRef(val['@set'])\n  } else if ('@ts' in val) {\n    return new values.FaunaTime(val['@ts'])\n  } else if ('@date' in val) {\n    return new values.FaunaDate(val['@date'])\n  } else if ('@bytes' in val) {\n    return new values.Bytes(val['@bytes'])\n  } else if ('@query' in val) {\n    return new values.Query(val['@query'])\n  } else {\n    return val\n  }\n}\n\nmodule.exports = {\n  toJSON: toJSON,\n  parseJSON: parseJSON,\n  parseJSONStreaming: parseJSONStreaming,\n}\n", "'use strict'\n\nvar query = require('./query')\nvar objectAssign = require('object-assign')\n\n/**\n * A FaunaDB Lambda expression to be passed into one of the collection\n * functions: Map or Filter.\n *\n * @callback PageHelper~collectionFunction\n * @param {any} var\n *   The variable passed in by FaunaDB when this Lambda\n *   function is executed.\n * @return {Expr}\n *   The FaunaDB query expression to be returned by this Lambda.\n */\n\n/**\n * @callback PageHelper~eachFunction\n * @param {Object} page\n *   A page returned by FaunaDB's Paginate function.\n */\n\n/**\n * A wrapper that provides a helpful API for consuming FaunaDB pages.\n *\n * Generally this is constructed through the {@link Client#paginate} method.\n *\n * The {@link PageHelper#map} and {@link PageHelper#filter} methods will wrap the underlying query with a Map\n * and Filter query function, respectively. These will be executed on the server when a promise-returning function\n * is called.\n *\n * The {@link PageHelper#each} and {@link PageHelper#eachReverse} functions dispatch queries to FaunaDB, and return Promises\n * representing the completion of those queries. The callbacks provided to these functions are executed locally when the\n * queries return.\n *\n * The {@link PageHelper#nextPage} and {@link PageHelper#previousPage} functions also dispatch queries to FaunaDB,\n * but return their responses in a wrapped Promise.\n *\n * @param {Client} client\n *   The FaunaDB client used to paginate.\n * @param {Object} set\n *   The set to paginate.\n * @param {?Object} params\n *   Parameters to be passed to the FaunaDB Paginate function.\n * @param {?Object} options\n *   Object that configures the current pagination, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @constructor\n */\nfunction PageHelper(client, set, params, options) {\n  if (params === undefined) {\n    params = {}\n  }\n\n  if (options === undefined) {\n    options = {}\n  }\n\n  this.reverse = false\n  this.params = {}\n\n  this.before = undefined\n  this.after = undefined\n\n  objectAssign(this.params, params)\n\n  var cursorParams = this.params.cursor || this.params\n\n  if ('before' in cursorParams) {\n    this.before = cursorParams.before\n    delete cursorParams.before\n  } else if ('after' in cursorParams) {\n    this.after = cursorParams.after\n    delete cursorParams.after\n  }\n\n  this.options = {}\n  objectAssign(this.options, options)\n\n  this.client = client\n  this.set = set\n\n  /**\n   * @member {Array.<Function>}\n   * @type {Array.<Function>}\n   * @private\n   */\n  this._faunaFunctions = []\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Map function.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The Lambda expression to be passed into the Map function.\n * @return {PageHelper}\n *\n */\nPageHelper.prototype.map = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Map(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Filter funciton.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The lambda expression to be passed into the Filter function.\n * @return {PageHelper}\n */\nPageHelper.prototype.filter = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Filter(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Executes the provided function for each page.\n *\n * @param {PageHelper~eachFunction} lambda\n *   A function to be executed for each page.\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.each = function(lambda) {\n  return this._retrieveNextPage(this.after, false).then(\n    this._consumePages(lambda, false)\n  )\n}\n\n/**\n * Executes the provided function for each page, in the reverse direction.\n * @param {PageHelper~eachFunction} lambda\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.eachReverse = function(lambda) {\n  return this._retrieveNextPage(this.before, true).then(\n    this._consumePages(lambda, true)\n  )\n}\n\n/**\n * Queries for the previous page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.previousPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.before, true).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\n/**\n * Queries for the next page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.nextPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.after, false).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\nPageHelper.prototype._adjustCursors = function(page) {\n  if (page.after !== undefined) {\n    this.after = page.after\n  }\n\n  if (page.before !== undefined) {\n    this.before = page.before\n  }\n\n  return page.data\n}\n\nPageHelper.prototype._consumePages = function(lambda, reverse) {\n  var self = this\n  return function(page) {\n    lambda(page.data)\n\n    var nextCursor\n    if (reverse) {\n      nextCursor = page.before\n    } else {\n      nextCursor = page.after\n    }\n\n    if (nextCursor !== undefined) {\n      return self\n        ._retrieveNextPage(nextCursor, reverse)\n        .then(self._consumePages(lambda, reverse))\n    } else {\n      return Promise.resolve()\n    }\n  }\n}\n\n/**\n *\n * @returns {external:Promise.<Object>}\n * @private\n */\nPageHelper.prototype._retrieveNextPage = function(cursor, reverse) {\n  var opts = {}\n  objectAssign(opts, this.params)\n  var cursorOpts = opts.cursor || opts\n\n  if (cursor !== undefined) {\n    if (reverse) {\n      cursorOpts.before = cursor\n    } else {\n      cursorOpts.after = cursor\n    }\n  } else {\n    if (reverse) {\n      cursorOpts.before = null\n    }\n  }\n\n  var q = query.Paginate(this.set, opts)\n\n  if (this._faunaFunctions.length > 0) {\n    this._faunaFunctions.forEach(function(lambda) {\n      q = lambda(q)\n    })\n  }\n\n  return this.client.query(q, this.options)\n}\n\n/**\n * @private\n * @returns {PageHelper}\n */\nPageHelper.prototype._clone = function() {\n  return Object.create(PageHelper.prototype, {\n    client: { value: this.client },\n    set: { value: this.set },\n    _faunaFunctions: { value: this._faunaFunctions },\n    before: { value: this.before },\n    after: { value: this.after },\n    params: { value: this.params },\n  })\n}\n\nmodule.exports = PageHelper\n", "'use strict'\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(\n  method,\n  path,\n  query,\n  requestRaw,\n  requestContent,\n  responseRaw,\n  responseContent,\n  statusCode,\n  responseHeaders,\n  startTime,\n  endTime\n) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method\n\n  /** @type {string} */\n  this.path = path\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query\n\n  /** @type {string} */\n  this.requestRaw = requestRaw\n\n  /** @type {object} */\n  this.requestContent = requestContent\n\n  /** @type {string} */\n  this.responseRaw = responseRaw\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent\n\n  /** @type {number} */\n  this.statusCode = statusCode\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders\n\n  /** @type {number} */\n  this.startTime = startTime\n\n  /** @type {number} */\n  this.endTime = endTime\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function() {\n    return this.endTime - this.startTime\n  },\n})\n\nmodule.exports = RequestResult\n", "'use strict'\nvar util = require('../_util')\n\n/**\n * Thrown by HttpClient when request hits specified timeout.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction TimeoutError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted due to timeout'\n  this.isTimeoutError = true\n}\n\nutil.inherits(TimeoutError, Error)\n\n/**\n * Thrown by HttpClient when request is aborted via Signal interface.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction AbortError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted'\n  this.isAbortError = true\n}\n\nutil.inherits(AbortError, Error)\n\nmodule.exports = {\n  TimeoutError: TimeoutError,\n  AbortError: AbortError,\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http2\" has been externalized for browser compatibility. Cannot access \"http2.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict'\nvar http2 = require('http2')\nvar errors = require('./errors')\nvar faunaErrors = require('../errors')\nvar util = require('../_util')\n\nvar STREAM_PREFIX = 'stream::'\n\n/**\n * Http client adapter built around NodeJS http2 module.\n *\n * @constructor\n * @param {object} options Http2Adapter options.\n * @param {number} options.http2SessionIdleTime The time (in milliseconds) that\n * an HTTP2 session may live when there's no activity.\n * @private\n */\nfunction Http2Adapter(options) {\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'http2'\n  /**\n   * Serves for reusing http2 sessions between multiple calls.\n   *\n   * @type {object}\n   * @private\n   */\n  this._sessionMap = {}\n  /**\n   * The time (in ms) that an HTTP2 session may live when there's no activity.\n   *\n   * @type {number}\n   * @private\n   */\n  this._http2SessionIdleTime = options.http2SessionIdleTime\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n}\n\n/**\n * Resolves ClientHttp2Session to be reused across multiple requests.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request. A separate session\n * is created for streaming requests to avoid shared resources with regular\n * ones for the purpose of reliability.\n * @returns {object} An interface to operate with HTTP2 session.\n */\nHttp2Adapter.prototype._resolveSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    return this._sessionMap[sessionKey]\n  }\n\n  var self = this\n  var timerId = null\n  var ongoingRequests = 0\n\n  var cleanup = function() {\n    self._cleanupSessionFor(origin, isStreaming)\n  }\n\n  var clearInactivityTimeout = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n      timerId = null\n    }\n  }\n\n  var setInactivityTimeout = function() {\n    clearInactivityTimeout()\n\n    if (self._http2SessionIdleTime === Infinity) {\n      return\n    }\n\n    var onTimeout = function() {\n      timerId = null\n\n      if (ongoingRequests === 0) {\n        cleanup()\n      }\n    }\n\n    timerId = setTimeout(onTimeout, self._http2SessionIdleTime)\n  }\n\n  var close = function(force) {\n    clearInactivityTimeout()\n\n    var shouldDestroy = force || isStreaming\n\n    if (shouldDestroy) {\n      session.destroy()\n\n      return Promise.resolve()\n    }\n\n    return new Promise(function(resolve) {\n      session.close(resolve)\n    })\n  }\n\n  var onRequestStart = function() {\n    ++ongoingRequests\n    clearInactivityTimeout()\n  }\n\n  var onRequestEnd = function() {\n    --ongoingRequests\n\n    var noOngoingRequests = ongoingRequests === 0\n    var isSessionClosed = self._closed || session.closed || session.destroyed\n\n    if (noOngoingRequests && !isSessionClosed) {\n      setInactivityTimeout()\n    }\n  }\n\n  var session = http2\n    .connect(origin)\n    .once('error', cleanup)\n    .once('goaway', cleanup)\n  var sessionInterface = {\n    session: session,\n    close: close,\n    onRequestStart: onRequestStart,\n    onRequestEnd: onRequestEnd,\n  }\n\n  this._sessionMap[sessionKey] = sessionInterface\n\n  return sessionInterface\n}\n\n/**\n * Performs cleanup for broken session.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request.\n * @returns {void}\n */\nHttp2Adapter.prototype._cleanupSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    this._sessionMap[sessionKey].session.close()\n    delete this._sessionMap[sessionKey]\n  }\n}\n\n/**\n * Issues http requests using http2 module.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nHttp2Adapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var isStreaming = options.streamConsumer != null\n\n  return new Promise(function(resolvePromise, rejectPromise) {\n    var isPromiseSettled = false\n    var isCanceled = false\n\n    var resolve = function(value) {\n      isPromiseSettled = true\n      resolvePromise(value)\n    }\n\n    // If an error has occurred after the Promise is settled\n    // we need to call streamConsumer.onError instead of reject function.\n    // Possible scenario is aborting request when stream is already being consumed.\n    var rejectOrOnError = function(error) {\n      var remapped = remapHttp2Error({ error, isClosed: self._closed })\n\n      if (isPromiseSettled && isStreaming) {\n        return options.streamConsumer.onError(remapped)\n      }\n\n      isPromiseSettled = true\n      rejectPromise(remapped)\n    }\n\n    var onSettled = function() {\n      sessionInterface.onRequestEnd()\n\n      if (options.signal) {\n        options.signal.removeEventListener('abort', onAbort)\n      }\n    }\n\n    var onError = function(error) {\n      onSettled()\n      rejectOrOnError(error)\n    }\n\n    var onAbort = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.AbortError())\n    }\n\n    var onTimeout = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.TimeoutError())\n    }\n\n    var onResponse = function(responseHeaders) {\n      var status = responseHeaders[http2.constants.HTTP2_HEADER_STATUS]\n      var isOkStatus = status >= 200 && status < 400\n      var processStream = isOkStatus && isStreaming\n      var responseBody = ''\n\n      var onData = function(chunk) {\n        if (processStream) {\n          return options.streamConsumer.onData(chunk)\n        }\n\n        responseBody += chunk\n      }\n\n      var onEnd = function() {\n        if (!isCanceled) {\n          onSettled()\n        }\n\n        if (!processStream) {\n          return resolve({\n            body: responseBody,\n            headers: responseHeaders,\n            status: status,\n          })\n        }\n\n        // Call .onError with TypeError only if the request hasn't been canceled\n        // and the Client hasn't been closed in order to align on how\n        // FetchAdapter works - it throws the TypeError due to underlying fetch API mechanics.\n        if (!isCanceled && !self._closed) {\n          options.streamConsumer.onError(new TypeError('network error'))\n        }\n      }\n\n      if (processStream) {\n        resolve({\n          // Syntactic stream representation.\n          body: '[stream]',\n          headers: responseHeaders,\n          status: status,\n        })\n      }\n\n      request.on('data', onData).on('end', onEnd)\n    }\n\n    try {\n      var pathname =\n        (options.path[0] === '/' ? options.path : '/' + options.path) +\n        util.querystringify(options.query, '?')\n      var requestHeaders = Object.assign({}, options.headers, {\n        [http2.constants.HTTP2_HEADER_PATH]: pathname,\n        [http2.constants.HTTP2_HEADER_METHOD]: options.method,\n      })\n      var sessionInterface = self._resolveSessionFor(\n        options.origin,\n        isStreaming\n      )\n      var request = sessionInterface.session\n        .request(requestHeaders)\n        .setEncoding('utf8')\n        .on('error', onError)\n        .on('response', onResponse)\n\n      sessionInterface.onRequestStart()\n\n      // Set up timeout only if no signal provided.\n      if (!options.signal && options.timeout) {\n        request.setTimeout(options.timeout, onTimeout)\n      }\n\n      if (options.signal) {\n        options.signal.addEventListener('abort', onAbort)\n      }\n\n      if (options.body != null) {\n        request.write(options.body)\n      }\n\n      request.end()\n    } catch (error) {\n      self._cleanupSessionFor(options.origin, isStreaming)\n      rejectOrOnError(error)\n    }\n  })\n}\n\n/**\n * Moves to the closed state, cleans up ongoing HTTP2 sessions if any.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttp2Adapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var noop = function() {}\n\n  return Promise.all(\n    Object.values(this._sessionMap).map(function(sessionInterface) {\n      return sessionInterface.close(opts.force)\n    })\n  ).then(noop)\n}\n\n/**\n * Remaps internal NodeJS error into ClientClosed one.\n *\n * @private\n * @param {Error} error Error object.\n * @returns {Error} Remapped error.\n */\nfunction remapHttp2Error({ error, isClosed }) {\n  var shouldRemap =\n    isClosed &&\n    (error.code === 'ERR_HTTP2_GOAWAY_SESSION' ||\n      error.code === 'ERR_HTTP2_STREAM_CANCEL')\n\n  if (shouldRemap) {\n    return new faunaErrors.ClientClosed(\n      'The request is aborted due to the Client#close call'\n    )\n  }\n\n  return error\n}\n\nmodule.exports = Http2Adapter\n", "'use strict'\n\nconst _global =\n  typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : /* otherwise */ undefined\n\nif (!_global) {\n  throw new Error(\n    `Unable to find global scope. Are you sure this is running in the browser?`\n  )\n}\n\nif (!_global.AbortController) {\n  throw new Error(\n    `Could not find \"AbortController\" in the global scope. You need to polyfill it first`\n  )\n}\n\nmodule.exports.AbortController = _global.AbortController", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict'\nvar { AbortController } = require('node-abort-controller')\nvar util = require('../_util')\nvar faunaErrors = require('../errors')\nvar errors = require('./errors')\n\n/**\n * Http client adapter built around fetch API.\n *\n * @constructor\n * @param {?object} options FetchAdapter options.\n * @param {?boolean} options.keepAlive Whether use keep-alive connection.\n * @param {?boolean} options.isHttps Whether use https connection.\n * @param {?function} options.fetch Fetch compatible API.\n * @private\n */\nfunction FetchAdapter(options) {\n  options = options || {}\n\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'fetch'\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n  this._fetch = util.resolveFetch(options.fetch)\n  /**\n   * A map that tracks ongoing requests to be able to cancel them when\n   * the .close method is called.\n   *\n   * @type {Map<Object, Object>}\n   * @private\n   */\n  this._pendingRequests = new Map()\n\n  if (util.isNodeEnv() && options.keepAlive) {\n    this._keepAliveEnabledAgent = new (options.isHttps\n      ? require('https')\n      : require('http')\n    ).Agent({ keepAlive: true, timeout: 3000 })\n  }\n}\n\n/**\n * Issues http requests using fetch API.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nFetchAdapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var timerId = null\n  var isStreaming = options.streamConsumer != null\n  // Use timeout only if no signal provided\n  var useTimeout = !options.signal && !!options.timeout\n  var ctrl = new AbortController()\n  var pendingRequest = {\n    isStreaming: isStreaming,\n    isAbortedByClose: false,\n    // This callback can be set during the .close method call to be notified\n    // on request ending to resolve .close's Promise only after all of the requests complete.\n    onComplete: null,\n  }\n\n  self._pendingRequests.set(ctrl, pendingRequest)\n\n  var onComplete = function() {\n    self._pendingRequests.delete(ctrl)\n\n    if (options.signal) {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    if (pendingRequest.onComplete) {\n      pendingRequest.onComplete()\n    }\n  }\n\n  var onSettle = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n  }\n\n  var onResponse = function(response) {\n    onSettle()\n\n    var headers = responseHeadersAsObject(response.headers)\n    var processStream = isStreaming && response.ok\n\n    // Regular request - return text content immediately.\n    if (!processStream) {\n      onComplete()\n\n      return response.text().then(function(content) {\n        return {\n          body: content,\n          headers: headers,\n          status: response.status,\n        }\n      })\n    }\n\n    attachStreamConsumer(response, options.streamConsumer, onComplete)\n\n    return {\n      // Syntactic stream representation.\n      body: '[stream]',\n      headers: headers,\n      status: response.status,\n    }\n  }\n\n  var onError = function(error) {\n    onSettle()\n    onComplete()\n\n    return Promise.reject(\n      remapIfAbortError(error, function() {\n        if (!isStreaming && pendingRequest.isAbortedByClose) {\n          return new faunaErrors.ClientClosed(\n            'The request is aborted due to the Client#close ' +\n              'call with the force=true option'\n          )\n        }\n\n        return useTimeout ? new errors.TimeoutError() : new errors.AbortError()\n      })\n    )\n  }\n\n  var onAbort = function() {\n    ctrl.abort()\n  }\n\n  if (useTimeout) {\n    timerId = setTimeout(function() {\n      timerId = null\n      ctrl.abort()\n    }, options.timeout)\n  }\n\n  if (options.signal) {\n    options.signal.addEventListener('abort', onAbort)\n  }\n\n  return this._fetch(\n    util.formatUrl(options.origin, options.path, options.query),\n    {\n      method: options.method,\n      headers: options.headers,\n      body: options.body,\n      agent: this._keepAliveEnabledAgent,\n      signal: ctrl.signal,\n    }\n  )\n    .then(onResponse)\n    .catch(onError)\n}\n\n/**\n * Moves to the closed state, aborts streaming requests.\n * Aborts non-streaming requests if force is true,\n * waits until they complete otherwise.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nFetchAdapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var promises = []\n\n  var abortOrWait = function(pendingRequest, ctrl) {\n    var shouldAbort = pendingRequest.isStreaming || opts.force\n\n    if (shouldAbort) {\n      pendingRequest.isAbortedByClose = true\n\n      return ctrl.abort()\n    }\n\n    promises.push(\n      new Promise(function(resolve) {\n        pendingRequest.onComplete = resolve\n      })\n    )\n  }\n\n  this._pendingRequests.forEach(abortOrWait)\n\n  var noop = function() {}\n\n  return Promise.all(promises).then(noop)\n}\n\n/**\n * Attaches streamConsumer specifically either for browser or NodeJS.\n * Minimum browser compatibility based on current code:\n * Chrome                52\n * Edge                  79\n * Firefox               65\n * IE                    NA\n * Opera                 39\n * Safari                10.1\n * Android Webview       52\n * Chrome for Android    52\n * Firefox for Android   65\n * Opera for Android     41\n * Safari on iOS         10.3\n * Samsung Internet      6.0\n *\n * @param {object} response Fetch response.\n * @param {object} consumer StreamConsumer.\n * @param {function} onComplete Callback fired when the stream ends or errors.\n * @private\n */\nfunction attachStreamConsumer(response, consumer, onComplete) {\n  var onError = function(error) {\n    onComplete()\n    consumer.onError(remapIfAbortError(error))\n  }\n\n  if (util.isNodeEnv()) {\n    response.body\n      .on('error', onError)\n      .on('data', consumer.onData)\n      .on('end', function() {\n        onComplete()\n        // To simulate how browsers behave in case of \"end\" event.\n        consumer.onError(new TypeError('network error'))\n      })\n\n    return\n  }\n\n  // ATTENTION: The following code is meant to run in browsers and is not\n  // covered by current test automation. Manual testing on major browsers\n  // is required after making changes to it.\n  try {\n    var reader = response.body.getReader()\n    var decoder = new TextDecoder('utf-8')\n\n    function pump() {\n      return reader.read().then(function(msg) {\n        if (!msg.done) {\n          var chunk = decoder.decode(msg.value, { stream: true })\n\n          consumer.onData(chunk)\n\n          return pump()\n        }\n\n        onComplete()\n        // In case a browser hasn't thrown the \"network error\" on stream's end\n        // we need to force it in order to provide a way to handle stream's\n        // ending.\n        consumer.onError(new TypeError('network error'))\n      })\n    }\n\n    pump().catch(onError)\n  } catch (err) {\n    throw new faunaErrors.StreamsNotSupported(\n      'Please, consider providing a Fetch API-compatible function ' +\n        'with streamable response bodies. ' +\n        err\n    )\n  }\n}\n\n/**\n * Remaps an AbortError thrown by fetch to HttpClient's one\n * for timeout and abort use-cases.\n *\n * @param {Error} error Error object.\n * @param {?function} errorFactory A factory called to construct an abort error.\n * @returns {Error} Remapped or original error.\n * @private\n */\nfunction remapIfAbortError(error, errorFactory) {\n  var isAbortError = error && error.name === 'AbortError'\n\n  if (!isAbortError) {\n    return error\n  }\n\n  if (errorFactory) {\n    return errorFactory()\n  }\n\n  return new errors.AbortError()\n}\n\n/**\n * Converts fetch Headers object into POJO.\n *\n * @param {object} headers Fetch Headers object.\n * @returns {object} Response headers as a plain object.\n * @private\n */\nfunction responseHeadersAsObject(headers) {\n  var result = {}\n\n  for (var header of headers.entries()) {\n    var key = header[0]\n    var value = header[1]\n\n    result[key] = value\n  }\n\n  return result\n}\n\nmodule.exports = FetchAdapter\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict'\nvar packageJson = require('../../package.json')\nconst { getBrowserOsDetails } = require('../_util')\nvar util = require('../_util')\nvar errors = require('./errors')\n\n/**\n * The driver's internal HTTP client.\n *\n * @constructor\n * @param {Object} options Same as the {@link Client} options.\n * @private\n */\nfunction HttpClient(options) {\n  var isHttps = options.scheme === 'https'\n\n  // If the port is a falsy value - replace it with default one.\n  if (!options.port) {\n    options.port = isHttps ? 443 : 80\n  }\n\n  // HTTP2 adapter is applicable only if it's NodeJS env and\n  // no fetch API override provided (to preserve backward-compatibility).\n  var useHttp2Adapter = !options.fetch && util.isNodeEnv() && isHttp2Supported()\n\n  this._adapter = useHttp2Adapter\n    ? new (require('./http2Adapter'))({\n        http2SessionIdleTime: options.http2SessionIdleTime,\n      })\n    : new (require('./fetchAdapter'))({\n        isHttps: isHttps,\n        fetch: options.fetch,\n        keepAlive: options.keepAlive,\n      })\n\n  if (options.endpoint === null) {\n    this._baseUrl = options.scheme + '://' + options.domain + ':' + options.port\n  } else {\n    this._baseUrl = options.endpoint\n  }\n\n  this._secret = options.secret\n  this._headers = Object.assign({}, options.headers, getDefaultHeaders())\n  this._queryTimeout = options.queryTimeout\n  this._lastSeen = null\n  this._timeout = Math.floor(options.timeout * 1000)\n}\n\n/**\n * Returns last seen transaction time.\n *\n * @returns {number} The last seen transaction time.\n */\nHttpClient.prototype.getLastTxnTime = function() {\n  return this._lastSeen\n}\n\n/**\n * Sets the last seen transaction if the given timestamp is greater than then\n * know last seen timestamp.\n *\n * @param {number} time transaction timestamp.\n */\nHttpClient.prototype.syncLastTxnTime = function(time) {\n  if (this._lastSeen == null || this._lastSeen < time) {\n    this._lastSeen = time\n  }\n}\n\n/**\n * Cleans up any held resources.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttpClient.prototype.close = function(opts) {\n  return this._adapter.close(opts)\n}\n\n/**\n * Executes an HTTP request.\n *\n * @param {?object} options Request parameters.\n * @param {?string} options.method Request method.\n * @param {?string} options.path Request path.\n * @param {?string} options.body Request body.\n * @param {?object} options.query Request query.\n * @params {?object} options.streamConsumer Stream consumer, if presented\n * the request will be \"streamed\" into streamConsumer.onData function.\n * @params {function} options.streamConsumer.onData Function called with a chunk of data.\n * @params {function} options.streamConsumer.onError Function called\n * when an error occurred.\n * when the stream is ended.\n * @param {?object} options.signal Abort signal object.\n * @param {?object} options.fetch Fetch API compatible function.\n * @param {?object} options.secret FaunaDB secret.\n * @param {?object} options.queryTimeout FaunaDB query timeout.\n * @returns {Promise} The response promise.\n */\nHttpClient.prototype.execute = function(options) {\n  options = options || {}\n\n  var invalidStreamConsumer =\n    options.streamConsumer &&\n    (typeof options.streamConsumer.onData !== 'function' ||\n      typeof options.streamConsumer.onError !== 'function')\n\n  if (invalidStreamConsumer) {\n    return Promise.reject(new TypeError('Invalid \"streamConsumer\" provided'))\n  }\n\n  var secret = options.secret || this._secret\n  var queryTimeout = options.queryTimeout || this._queryTimeout\n  var headers = this._headers\n\n  headers['Authorization'] = secret && secretHeader(secret)\n  headers['X-Last-Seen-Txn'] = this._lastSeen\n  headers['X-Query-Timeout'] = queryTimeout\n\n  return this._adapter.execute({\n    origin: this._baseUrl,\n    path: options.path || '/',\n    query: options.query,\n    method: options.method || 'GET',\n    headers: util.removeNullAndUndefinedValues(headers),\n    body: options.body,\n    signal: options.signal,\n    timeout: this._timeout,\n    streamConsumer: options.streamConsumer,\n  })\n}\n\nfunction secretHeader(secret) {\n  return 'Bearer ' + secret\n}\n\n/** @ignore */\nfunction getDefaultHeaders() {\n  var driverEnv = {\n    driver: ['javascript', packageJson.version].join('-'),\n  }\n\n  var isServiceWorker\n\n  try {\n    isServiceWorker = global instanceof ServiceWorkerGlobalScope\n  } catch (error) {\n    isServiceWorker = false\n  }\n\n  try {\n    if (util.isNodeEnv()) {\n      driverEnv.runtime = ['nodejs', process.version].join('-')\n      driverEnv.env = util.getNodeRuntimeEnv()\n      var os = require('os')\n      driverEnv.os = [os.platform(), os.release()].join('-')\n    } else if (isServiceWorker) {\n      driverEnv.runtime = 'Service Worker'\n    } else {\n      driverEnv.runtime = util.getBrowserDetails()\n      driverEnv.env = 'browser'\n      driverEnv.os = getBrowserOsDetails()\n    }\n  } catch (_) {}\n\n  var headers = {\n    'X-FaunaDB-API-Version': packageJson.apiVersion,\n  }\n\n  // TODO: api cors must be enabled to accept header X-Driver-Env\n  if (util.isNodeEnv()) {\n    headers['X-Driver-Env'] = Object.keys(driverEnv)\n      .map(key => [key, driverEnv[key].toLowerCase()].join('='))\n      .join('; ')\n  }\n  return headers\n}\n\nfunction isHttp2Supported() {\n  try {\n    require('http2')\n\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nmodule.exports = {\n  HttpClient: HttpClient,\n  TimeoutError: errors.TimeoutError,\n  AbortError: errors.AbortError,\n}\n", "'use strict'\n\n/** @module stream */\n\n// NOTE: Although implemented in a separate module, streaming shares internal\n// responsibilities with both Client and HTTP interfaces, such as updating last\n// seen transaction timestamp. Therefore, this implementation\n// sometimes breaks encapsulation and calls internal getters and methods. As a\n// general rule: it's okay to call internal methods. You can interpret this\n// as calling for a package visible method in languages with fine-grained\n// visibility control. However, DO NOT change any internal state from outside of\n// its context as it'd most certainly lead to errors.\n\nvar { AbortController } = require('node-abort-controller')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar json = require('./_json')\nvar http = require('./_http')\nvar q = require('./query')\nvar util = require('./_util')\n\nvar DefaultEvents = ['start', 'error', 'version', 'history_rewrite', 'set']\nvar DocumentStreamEvents = DefaultEvents.concat(['snapshot'])\n\n/**\n * The internal stream client interface. This class handles the network side of\n * a stream subscription.\n *\n * @constructor\n * @param {Client} client The FaunaDB client.\n * @param {module:query~ExprArg} expression The FQL expression you are subscribing to.\n * @param {module:stream~Options} options The stream options.\n * @param {function} onEvent The stream event's callback function.\n * @private\n */\nfunction StreamClient(client, expression, options, onEvent) {\n  options = util.applyDefaults(options, {\n    fields: null,\n  })\n\n  this._client = client\n  this._onEvent = onEvent\n  this._query = q.wrap(expression)\n  this._urlParams = options.fields ? { fields: options.fields.join(',') } : null\n  this._abort = new AbortController()\n  this._state = 'idle'\n}\n\n/**\n * Takes a snapshot of the current query. Assumes the subscribed query returns a\n * reference.\n */\nStreamClient.prototype.snapshot = function() {\n  var self = this\n  self._client\n    .query(q.Get(self._query))\n    .then(function(doc) {\n      self._onEvent({\n        type: 'snapshot',\n        event: doc,\n      })\n    })\n    .catch(function(error) {\n      self._onEvent({\n        type: 'error',\n        event: error,\n      })\n    })\n}\n\n/** Initiates the stream subscription.  */\nStreamClient.prototype.subscribe = function() {\n  var self = this\n\n  if (self._state === 'idle') {\n    self._state = 'open'\n  } else {\n    throw new Error(\n      'Subscription#start should not be called several times, ' +\n        'consider instantiating a new stream instead.'\n    )\n  }\n\n  var body = JSON.stringify(self._query)\n  var startTime = Date.now()\n  var buffer = ''\n\n  function onResponse(response) {\n    var endTime = Date.now()\n    var parsed\n\n    try {\n      parsed = json.parseJSON(response.body)\n    } catch (_) {\n      parsed = response.body\n    }\n\n    var result = new RequestResult(\n      'POST',\n      'stream',\n      self._urlParams,\n      body,\n      self._query,\n      response.body,\n      parsed,\n      response.status,\n      response.headers,\n      startTime,\n      endTime\n    )\n\n    self._client._handleRequestResult(response, result)\n  }\n\n  function onData(data) {\n    var result = json.parseJSONStreaming(buffer + data)\n\n    buffer = result.buffer\n\n    result.values.forEach(function(event) {\n      if (event.txn !== undefined) {\n        self._client.syncLastTxnTime(event.txn)\n      }\n\n      if (event.event === 'error') {\n        onError(new errors.StreamErrorEvent(event))\n      } else {\n        self._onEvent(event)\n      }\n    })\n  }\n\n  function onError(error) {\n    // AbortError is triggered as result of calling\n    // close() on a Subscription. There's no need to relay this event back up.\n    if (error instanceof http.AbortError) {\n      return\n    }\n\n    self._onEvent({\n      type: 'error',\n      event: error,\n    })\n  }\n\n  self._client._http\n    .execute({\n      method: 'POST',\n      path: 'stream',\n      body: body,\n      query: self._urlParams,\n      signal: this._abort.signal,\n      streamConsumer: {\n        onError: onError,\n        onData: onData,\n      },\n    })\n    .then(onResponse)\n    .catch(onError)\n}\n\n/** Closes the stream subscription by aborting its underlying http request. */\nStreamClient.prototype.close = function() {\n  if (this._state !== 'closed') {\n    this._state = 'closed'\n    this._abort.abort()\n  }\n}\n\n/**\n * Event dispatch interface for stream subscription.\n *\n * @constructor\n * @param {string[]} allowedEvents List of allowed events.\n * @private\n */\nfunction EventDispatcher(allowedEvents) {\n  this._allowedEvents = allowedEvents\n  this._listeners = {}\n}\n\n/** Subscribe to an event\n *\n * @param {string} type The event type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   The event's callback.\n */\nEventDispatcher.prototype.on = function(type, callback) {\n  if (this._allowedEvents.indexOf(type) === -1) {\n    throw new Error('Unknown event type: ' + type)\n  }\n  if (this._listeners[type] === undefined) {\n    this._listeners[type] = []\n  }\n  this._listeners[type].push(callback)\n}\n\n/**\n * Dispatch the given event to the appropriate listeners.\n *\n * @param {Object} event The event.\n */\nEventDispatcher.prototype.dispatch = function(event) {\n  var listeners = this._listeners[event.type]\n  if (!listeners) {\n    return\n  }\n\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].call(null, event.event, event)\n  }\n}\n\n/**\n * Stream's start event. A stream subscription always begins with a start event.\n * Upcoming events are guaranteed to have transaction timestamps equal to or greater than\n * the stream's start timestamp.\n *\n * @event module:stream~Subscription#start\n * @type {object}\n * @property {string} type='start'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {module:number} event\n *   The stream start timestamp.\n */\n\n/**\n * A version event occurs upon any modifications to the current state of the\n * subscribed document.\n *\n * @event module:stream~Subscription#version\n * @type {object}\n * @property {string} type='version'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A history rewrite event occurs upon any modifications to the history of the\n * subscribed document.\n *\n * @event module:stream~Subscription#history_rewrite\n * @type {object}\n * @property {string} type='history_rewrite'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A snapshot event. A snapshot event is fired once the `document` stream helper\n * finishes loading the subscribed document's snapshot data. See {@link\n * Client#stream} for more details on the `document` stream helper.\n *\n * @event module:stream~Subscription#snapshot\n * @type {object}\n * @property {string} type='snapshot'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * An error event is fired both for client and server errors that may occur as\n * a result of a subscription.\n *\n * @event module:stream~Subscription#error\n * @type {object}\n * @property {string} type='error'\n *   The event type.\n * @property {?number} txn\n *   The event's transaction timestamp.\n * @property {Error} event\n *   The underlying error.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string[]} [fields=['action', 'document', 'diff', 'prev', 'index']]\n *   The fields event fields to opt-in during stream subscription. Possible\n *   options:\n *   * 'action': The action type\n *   * 'document': The document's data\n *   * 'diff': The difference between 'document' and 'prev'\n *   * 'prev': The event's previous data\n *   * 'index': The event's source index, if a set event\n */\n\n/**\n * The callback to be executed when an new event occurs.\n *\n * @callback module:stream~Subscription~eventCalllback\n * @param {any} data The event's data field.\n * @param {object} event The event's entire object.\n */\n\n/**\n * A stream subscription which dispatches events received to the registered\n * listener functions. This class must be constructed via {@link Client#stream}\n * method.\n *\n * @constructor\n * @param {StreamClient} client\n *   Internal stream client interface.\n * @param {EventDispatcher} dispatcher\n *   Internal event dispatcher interface.\n */\nfunction Subscription(client, dispatcher) {\n  this._client = client\n  this._dispatcher = dispatcher\n}\n\n/**\n * Subscribes to an event type.\n *\n * @param {string} event\n *   The event's type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   A callback function.\n *\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.on = function(type, callback) {\n  this._dispatcher.on(type, callback)\n  return this\n}\n\n/**\n * Initiates the underlying subscription network calls.\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.start = function() {\n  this._client.subscribe()\n  return this\n}\n\n/**\n * Stops the current subscription and closes the underlying network connection.\n */\nSubscription.prototype.close = function() {\n  this._client.close()\n}\n\n/**\n * Stream API factory function. See {@link Client#stream} for details on how to\n * use stream's public interface.\n * @private\n */\nfunction StreamAPI(client) {\n  var api = function(expression, options) {\n    var dispatcher = new EventDispatcher(DefaultEvents)\n    var streamClient = new StreamClient(client, expression, options, function(\n      event\n    ) {\n      dispatcher.dispatch(event)\n    })\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  api.document = function(expression, options) {\n    var buffer = []\n    var buffering = true\n    var dispatcher = new EventDispatcher(DocumentStreamEvents)\n    var streamClient = new StreamClient(client, expression, options, onEvent)\n\n    function onEvent(event) {\n      switch (event.type) {\n        case 'start':\n          dispatcher.dispatch(event)\n          streamClient.snapshot()\n          break\n        case 'snapshot':\n          resume(event)\n          break\n        case 'error':\n          dispatcher.dispatch(event)\n          break\n        default:\n          if (buffering) {\n            buffer.push(event)\n          } else {\n            dispatcher.dispatch(event)\n          }\n      }\n    }\n\n    function resume(snapshotEvent) {\n      dispatcher.dispatch(snapshotEvent)\n      for (var i = 0; i < buffer.length; i++) {\n        var bufferedEvent = buffer[i]\n        if (bufferedEvent.txn > snapshotEvent.event.ts) {\n          dispatcher.dispatch(bufferedEvent)\n        }\n      }\n      buffering = false\n      buffer = null\n    }\n\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  return api\n}\n\nmodule.exports = {\n  StreamAPI: StreamAPI,\n}\n", "'use strict'\n\nvar packageJson = require('../package.json')\nvar PageHelper = require('./PageHelper')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar http = require('./_http')\nvar json = require('./_json')\nvar query = require('./query')\nvar stream = require('./stream')\nvar util = require('./_util')\nvar values = require('./values')\n\n/**\n * The callback that will be executed after every completed request.\n *\n * @callback Client~observerCallback\n * @param {RequestResult} res\n */\n\n/**\n * **WARNING: This is an experimental feature. There are no guarantees to\n * its API stability and/or service availability. DO NOT USE IT IN\n * PRODUCTION**.\n *\n * Creates a subscription to the result of the given read-only expression. When\n * executed, the expression must only perform reads and produce a single\n * streamable type, such as a reference or a version. Expressions that attempt\n * to perform writes or produce non-streamable types will result in an error.\n * Otherwise, any expression can be used to initiate a stream, including\n * user-defined function calls.\n *\n * The subscription returned by this method does not issue any requests until\n * the {@link module:stream~Subscription#start} method is called. Make sure to\n * subscribe to the events of interest, otherwise the received events are simply\n * ignored. For example:\n *\n * ```\n * client.stream(document.ref)\n *   .on('version', version => console.log(version))\n *   .on('error', error => console.log(error))\n *   .start()\n * ```\n *\n * Please note that streams are not temporal, meaning that there is no option to\n * configure its starting timestamp. The stream will, however, state its initial\n * subscription time via the {@link module:stream~Subscription#event:start}\n * event. A common programming mistake is to read a document, then initiate a\n * subscription. This approach can miss events that occurred between the initial\n * read and the subscription request. To prevent event loss, make sure the\n * subscription has started before performing a data load. The following example\n * buffer events until the document's data is loaded:\n *\n * ```\n * var buffer = []\n * var loaded = false\n *\n * client.stream(document.ref)\n *   .on('start', ts => {\n *     loadData(ts).then(data => {\n *       processData(data)\n *       processBuffer(buffer)\n *       loaded = true\n *     })\n *   })\n *   .on('version', version => {\n *     if (loaded) {\n *       processVersion(version)\n *     } else {\n *       buffer.push(version)\n *     }\n *   })\n *   .start()\n * ```\n *\n * The reduce boilerplate, the `document` helper implements a similar\n * functionality, except it discards events prior to the document's snapshot\n * time. The expression given to this helper must be a reference as it\n * internally runs a {@link module:query~Get} call with it. The example above\n * can be rewritten as:\n *\n * ```\n * client.stream.document(document.ref)\n *   .on('snapshot', data => processData(data))\n *   .on('version', version => processVersion(version))\n *   .start()\n * ```\n *\n * Be aware that streams are not available in all browsers. If the client can't\n * initiate a stream, an error event with the {@link\n * module:errors~StreamsNotSupported} error will be emmited.\n *\n * To stop a subscription, call the {@link module:stream~Subscription#close}\n * method:\n *\n * ```\n * var subscription = client.stream(document.ref)\n *   .on('version', version => processVersion(version))\n *   .start()\n *\n * // ...\n * subscription.close()\n * ```\n *\n * @param {module:query~ExprArg} expression\n *   The expression to subscribe to. Created from {@link module:query}\n *   functions.\n *\n * @param {?module:stream~Options} options\n *   Object that configures the stream.\n *\n * @property {function} document\n *  A document stream helper. See {@link Client#stream} for more information.\n *\n * @see module:stream~Subscription\n *\n * @function\n * @name Client#stream\n * @returns {module:stream~Subscription} A new subscription instance.\n */\n\n/**\n * A client for interacting with FaunaDB.\n *\n * Users will mainly call the {@link Client#query} method to execute queries, or\n * the {@link Client#stream} method to subscribe to streams.\n *\n * See the [FaunaDB Documentation](https://fauna.com/documentation) for detailed examples.\n *\n * All methods return promises containing a JSON object that represents the FaunaDB response.\n * Literal types in the response object will remain as strings, Arrays, and objects.\n * FaunaDB types, such as {@link Ref}, {@link SetRef}, {@link FaunaTime}, and {@link FaunaDate} will\n * be converted into the appropriate object.\n *\n * (So if a response contains `{ \"@ref\": \"collections/frogs/123\" }`,\n * it will be returned as `new Ref(\"collections/frogs/123\")`.)\n *\n * @constructor\n * @param {?Object} options\n *   Object that configures this FaunaDB client.\n * @param {?string} options.endpoint\n *   Full URL for the FaunaDB server.\n * @param {?string} options.domain\n *   Base URL for the FaunaDB server.\n * @param {?('http'|'https')} options.scheme\n *   HTTP scheme to use.\n * @param {?number} options.port\n *   Port of the FaunaDB server.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @param {?number} options.timeout Read timeout in seconds.\n * @param {?Client~observerCallback} options.observer\n *   Callback that will be called after every completed request.\n * @param {?boolean} options.keepAlive\n *   Configures http/https keepAlive option (ignored in browser environments)\n * @param {?{ string: string }} options.headers\n *   Optional headers to send with requests\n * @param {?fetch} options.fetch\n *   a fetch compatible [API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for making a request\n * @param {?number} options.queryTimeout\n *   Sets the maximum amount of time (in milliseconds) for query execution on the server\n * @param {?number} options.http2SessionIdleTime\n *   Sets the maximum amount of time (in milliseconds) an HTTP2 session may live\n *   when there's no activity. Must be a non-negative integer, with a maximum value of 5000.\n *   If an invalid value is passed a default of 500 ms is applied. If a value\n *   exceeding 5000 ms is passed (e.g. Infinity) the maximum of 5000 ms is applied.\n *   Only applicable for NodeJS environment (when http2 module is used).\n *   can also be configured via the FAUNADB_HTTP2_SESSION_IDLE_TIME environment variable\n *   which has the highest priority and overrides the option passed into the Client constructor.\n * @param {?boolean} options.checkNewVersion\n *   Enabled by default. Prints a message to the terminal when a newer driver is available.\n * @param {?boolean} options.metrics\n *   Disabled by default. Controls whether or not query metrics are returned.\n */\nfunction Client(options) {\n  const http2SessionIdleTime = getHttp2SessionIdleTime(\n    options ? options.http2SessionIdleTime : undefined\n  )\n\n  if (options) options.http2SessionIdleTime = http2SessionIdleTime\n\n  options = util.applyDefaults(options, {\n    endpoint: null,\n    domain: 'db.fauna.com',\n    scheme: 'https',\n    port: null,\n    secret: null,\n    timeout: 60,\n    observer: null,\n    keepAlive: true,\n    headers: {},\n    fetch: undefined,\n    queryTimeout: null,\n    http2SessionIdleTime,\n    checkNewVersion: false,\n  })\n\n  this._observer = options.observer\n  this._http = new http.HttpClient(options)\n  this.stream = stream.StreamAPI(this)\n}\n\n/**\n * Current API version.\n *\n * @type {string}\n */\nClient.apiVersion = packageJson.apiVersion\n\n/**\n * Executes a query via the FaunaDB Query API.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi),\n * and the query functions in this documentation.\n * @param expression {module:query~ExprArg}\n *   The query to execute. Created from {@link module:query} functions.\n * @param {?Object} options\n *   Object that configures the current query, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @return {external:Promise<Object>} FaunaDB response object.\n */\nClient.prototype.query = function(expression, options) {\n  query.arity.between(1, 2, arguments, 'Client.prototype.query')\n  options = Object.assign({}, this._globalQueryOptions, options)\n  return this._execute('POST', '', query.wrap(expression), null, options)\n}\n\n/**\n * Returns a {@link PageHelper} for the given Query expression.\n * This provides a helpful API for paginating over FaunaDB responses.\n * @param expression {Expr}\n *   The Query expression to paginate over.\n * @param params {Object}\n *   Options to be passed to the paginate function. See [paginate](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * @param options {?Object}\n *   Object that configures the current pagination queries, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @returns {PageHelper} A PageHelper that wraps the provided expression.\n */\nClient.prototype.paginate = function(expression, params, options) {\n  params = util.defaults(params, {})\n  options = util.defaults(options, {})\n\n  return new PageHelper(this, expression, params, options)\n}\n\n/**\n * Sends a `ping` request to FaunaDB.\n * @return {external:Promise<string>} Ping response.\n */\nClient.prototype.ping = function(scope, timeout) {\n  return this._execute('GET', 'ping', null, { scope: scope, timeout: timeout })\n}\n\n/**\n * Get the freshest timestamp reported to this client.\n * @returns {number} the last seen transaction time\n */\nClient.prototype.getLastTxnTime = function() {\n  return this._http.getLastTxnTime()\n}\n\n/**\n * Sync the freshest timestamp seen by this client.\n *\n * This has no effect if staler than currently stored timestamp.\n * WARNING: This should be used only when coordinating timestamps across\n *          multiple clients. Moving the timestamp arbitrarily forward into\n *          the future will cause transactions to stall.\n * @param time {number} the last seen transaction time\n */\nClient.prototype.syncLastTxnTime = function(time) {\n  this._http.syncLastTxnTime(time)\n}\n\n/**\n * Closes the client session and cleans up any held resources.\n * By default, it will wait for any ongoing requests to complete on their own;\n * streaming requests are terminated forcibly. Any subsequent requests will\n * error after the .close method is called.\n * Should be used at application termination in order to release any open resources\n * and allow the process to terminate e.g. when the custom http2SessionIdleTime parameter is used.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Specifying this property will force any ongoing\n * requests to terminate instead of gracefully waiting until they complete.\n * This may result in an ERR_HTTP2_STREAM_CANCEL error for NodeJS.\n * @returns {Promise<void>}\n */\nClient.prototype.close = function(opts) {\n  return this._http.close(opts)\n}\n\n/**\n * Executes a query via the FaunaDB Query API.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi),\n * and the query functions in this documentation.\n * @param expression {module:query~ExprArg}\n *   The query to execute. Created from {@link module:query} functions.\n * @param {?Object} options\n *   Object that configures the current query, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @return {external:Promise<Object>} {value, metrics} An object containing the FaunaDB response object and the list of query metrics incurred by the request.\n */\nClient.prototype.queryWithMetrics = function(expression, options) {\n  query.arity.between(1, 2, arguments, 'Client.prototype.query')\n  return this._execute('POST', '', query.wrap(expression), null, options, true)\n}\n\nClient.prototype._execute = function(\n  method,\n  path,\n  data,\n  query,\n  options,\n  returnMetrics = false\n) {\n  query = util.defaults(query, null)\n\n  if (\n    path instanceof values.Ref ||\n    util.checkInstanceHasProperty(path, '_isFaunaRef')\n  ) {\n    path = path.value\n  }\n\n  if (query !== null) {\n    query = util.removeUndefinedValues(query)\n  }\n\n  var startTime = Date.now()\n  var self = this\n  var body =\n    ['GET', 'HEAD'].indexOf(method) >= 0 ? undefined : JSON.stringify(data)\n\n  return this._http\n    .execute(\n      Object.assign({}, options, {\n        path: path,\n        query: query,\n        method: method,\n        body: body,\n      })\n    )\n    .then(function(response) {\n      var endTime = Date.now()\n      var responseObject = json.parseJSON(response.body)\n      var result = new RequestResult(\n        method,\n        path,\n        query,\n        body,\n        data,\n        response.body,\n        responseObject,\n        response.status,\n        response.headers,\n        startTime,\n        endTime\n      )\n      self._handleRequestResult(response, result, options)\n\n      const metricsHeaders = [\n        'x-compute-ops',\n        'x-byte-read-ops',\n        'x-byte-write-ops',\n        'x-query-time',\n        'x-txn-retries',\n      ]\n\n      if (returnMetrics) {\n        return {\n          value: responseObject['resource'],\n          metrics: Object.fromEntries(\n            Array.from(Object.entries(response.headers))\n              .filter(([k, v]) => metricsHeaders.includes(k))\n              .map(([k, v]) => [k, parseInt(v)])\n          ),\n        }\n      } else {\n        return responseObject['resource']\n      }\n    })\n}\n\nClient.prototype._handleRequestResult = function(response, result, options) {\n  var txnTimeHeaderKey = 'x-txn-time'\n\n  if (response.headers[txnTimeHeaderKey] != null) {\n    this.syncLastTxnTime(parseInt(response.headers[txnTimeHeaderKey], 10))\n  }\n\n  var observers = [this._observer, options && options.observer]\n\n  observers.forEach(observer => {\n    if (typeof observer == 'function') {\n      observer(result, this)\n    }\n  })\n\n  errors.FaunaHTTPError.raiseForStatusCode(result)\n}\n\nfunction getHttp2SessionIdleTime(configuredIdleTime) {\n  const maxIdleTime = 5000\n  const defaultIdleTime = 500\n  const envIdleTime = util.getEnvVariable('FAUNADB_HTTP2_SESSION_IDLE_TIME')\n\n  var value = defaultIdleTime\n  // attemp to set the idle time to the env value and then the configured value\n  const values = [envIdleTime, configuredIdleTime]\n  for (const rawValue of values) {\n    const parsedValue =\n      rawValue === 'Infinity' ? Number.MAX_SAFE_INTEGER : parseInt(rawValue, 10)\n    const isNegative = parsedValue < 0\n    const isGreaterThanMax = parsedValue > maxIdleTime\n    // if we didn't get infinity or a positive integer move to the next value\n    if (isNegative || !parsedValue) continue\n    // if we did get something valid constrain it to the ceiling\n    value = parsedValue\n    if (isGreaterThanMax) value = maxIdleTime\n    break\n  }\n\n  return value\n}\n\nmodule.exports = Client\n", "'use strict'\n\nvar json = require('./_json')\n\n/**\n * Functions to assist with debug logging.\n * @module clientLogger\n */\n\n/**\n * A user provided log line handler.\n *\n * @callback loggerCallback\n * @param {string} logged\n */\n\n/**\n * Function that can be the `observer` for a {@link Client}.\n * Will call `loggerFunction` with a string representation of each {@link RequestResult}.\n *\n * An example logging string:\n * ```plain\n * Fauna POST /\n * Request JSON: {\n *   \"data\": ...\n * }\n * Response headers: {\n *    \"x-faunadb-host\": ...,\n *    \"x-faunadb-build\": ...,\n *    \"connection\": \"close\",\n *    \"content-length\": ...,\n *    \"content-type\": \"application/json;charset=utf-8\"\n *  }\n * Response JSON: {\n *    \"resource\": {\n *      \"ref\": { ... },\n *      \"class\": { ... },\n *      \"ts\": ...\n *    }\n *  }\n * Response (201): Network latency 13ms\n * ```\n *\n * @param {loggerCallback} loggerFunction\n * @return {Client~observerCallback}\n * @example\n * var client = new Client({\n *   ... other options ...\n *   observer: logger(console.log)\n * })\n * client.ping() // Logs the request and response.\n */\nfunction logger(loggerFunction) {\n  return function(requestResult, client) {\n    return loggerFunction(showRequestResult(requestResult), client)\n  }\n}\n\n/**\n * Convenience function used by {@link logger} to transform a {@link RequestResult}\n * to a string for logging.\n * @param {RequestResult} requestResult\n * @returns {string} string to be logged.\n */\nfunction showRequestResult(requestResult) {\n  var query = requestResult.query,\n    method = requestResult.method,\n    path = requestResult.path,\n    requestContent = requestResult.requestContent,\n    responseHeaders = requestResult.responseHeaders,\n    responseContent = requestResult.responseContent,\n    statusCode = requestResult.statusCode,\n    timeTaken = requestResult.timeTaken\n\n  var out = ''\n\n  function log(str) {\n    out = out + str\n  }\n\n  log('Fauna ' + method + ' /' + path + _queryString(query) + '\\n')\n  if (requestContent != null) {\n    log('  Request JSON: ' + _showJSON(requestContent) + '\\n')\n  }\n  log('  Response headers: ' + _showJSON(responseHeaders) + '\\n')\n  log('  Response JSON: ' + _showJSON(responseContent) + '\\n')\n  log('  Response (' + statusCode + '): Network latency ' + timeTaken + 'ms\\n')\n\n  return out\n}\n\nfunction _indent(str) {\n  var indentStr = '  '\n  return str.split('\\n').join('\\n' + indentStr)\n}\n\nfunction _showJSON(object) {\n  return _indent(json.toJSON(object, true))\n}\n\nfunction _queryString(query) {\n  if (query == null) {\n    return ''\n  }\n\n  var keys = Object.keys(query)\n  if (keys.length === 0) {\n    return ''\n  }\n\n  var pairs = keys.map(function(key) {\n    return key + '=' + query[key]\n  })\n  return '?' + pairs.join('&')\n}\n\nmodule.exports = {\n  logger: logger,\n  showRequestResult: showRequestResult,\n}\n", "var query = require('./src/query')\nvar util = require('./src/_util')\nvar parseJSON = require('./src/_json').parseJSON\n\nmodule.exports = util.mergeObjects(\n  {\n    Client: require('./src/Client'),\n    Expr: require('./src/Expr'),\n    PageHelper: require('./src/PageHelper'),\n    RequestResult: require('./src/RequestResult'),\n\n    clientLogger: require('./src/clientLogger'),\n    errors: require('./src/errors'),\n    values: require('./src/values'),\n    query: query,\n    parseJSON: parseJSON,\n  },\n  query\n)\n"],
  "mappings": "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",
  "names": ["global", "self", "exports", "defaults", "min", "max", "len", "i", "len2", "require_util", "Map", "params", "Date", "values", "values", "self", "require_errors", "self", "require_browser", "self", "require_http", "self", "query", "self", "values"]
}
